{
  "name": "pytest-virtualenv",
  "description": "Py.test Virtualenv Fixture\n==========================\n\nCreate a Python virtual environment in your test that cleans up on\nteardown. The fixture has utility methods to install packages and list\nwhat's installed.\n\nInstallation\n------------\n\nInstall using your favourite package installer:\n\n.. code:: bash\n\n        pip install pytest-virtualenv\n        # or\n        easy_install pytest-virtualenv\n\nEnable the fixture explicitly in your tests or conftest.py (not required\nwhen using setuptools entry points):\n\n.. code:: python\n\n        pytest_plugins = ['pytest_virtualenv']\n\nConfiguration\n-------------\n\nThis fixture is configured using the following evironment variables\n\n+-----------------------------------+----------------------------------------------------------------+------------------+\n| Setting                           | Description                                                    | Default          |\n+===================================+================================================================+==================+\n| VIRTUALENV\\_FIXTURE\\_EXECUTABLE   | Which virtualenv executable will be used to create new venvs   | ``virtualenv``   |\n+-----------------------------------+----------------------------------------------------------------+------------------+\n\nFixture Attributes\n------------------\n\nHere's a noddy test case to demonstrate the basic fixture attributes.\nFor more information on ``path.py`` see https://pathpy.readthedocs.io/\n\n.. code:: python\n\n    def test_virtualenv(virtualenv):\n        # the 'virtualenv' attribute is a `path.py` object for the root of the virtualenv\n        dirnames = virtualenv.virtualenv.dirs()\n        assert {'bin', 'include', 'lib'}.intersection(set(dirnames))\n\n        # the 'python' attribute is a `path.py` object for the python executable\n        assert virtualenv.python.endswith('/bin/python')\n\nInstalling Packages\n-------------------\n\nYou can install packages by name and query what's installed.\n\n.. code:: python\n\n    def test_installing(virtualenv):\n        virtualenv.install_package('coverage', installer='pip')\n\n        # installed_packages() will return a list of `PackageEntry` objects.\n        assert 'coverage' in [i.name for i in virtualenv.installed_packages()]\n\nDeveloping Source Checkouts\n---------------------------\n\nAny packages set up in the *test runner's* python environment (ie, the\nsame runtime that ``py.test`` is installed in) as source checkouts using\n``python setup.py develop`` will be detected as such and can be\ninstalled by name using ``install_package``. By default they are\ninstalled into the virtualenv using ``python setup.py develop``, there\nis an option to build and install an egg as well:\n\n.. code:: python\n\n    def test_installing_source(virtualenv):\n        # Install a source checkout of my_package as an egg file\n        virtualenv.install_package('my_package',  build_egg=True)\n\nRunning Commands\n----------------\n\nThe test fixture has a ``run`` method which allows you to run commands\nwith the correct paths set up as if you had activated the virtualenv\nfirst.\n\n.. code:: python\n\n    def test_run(virtualenv):\n        python_exe_path  = virtualenv.python\n        runtime_exe = virtualenv.run(\"python -c 'import sys; print sys.executable'\", capture=True)\n        assert runtime_exe == python_exe_path\n\nRunning Commands With Coverage\n------------------------------\n\nThe test fixture has a ``run_with_coverage`` method which is like\n``run`` but runs the command under coverage *inside the virtualenv*.\nThis is useful for capturing test coverage on tools that are being\ntested outside the normal test runner environment.\n\n.. code:: python\n\n    def test_coverage(virtualenv):\n        # You will have to install coverage first\n        virtualenv.install_package(coverage)\n        virtualenv.run_with_coverage([\"my_entry_point\", \"--arg1\", \"--arg2\"])\n\n\nChangelog\n---------\n\n1.7.0\n~~~~~\n\n-  All: Support pytest >= 4.0.0\n-  All: Support Python 3.7\n-  pytest-server-fixtures: if host not defined on your machine, default\n   to localhost\n-  pytest-server-fixture: Pin to rethinkdb < 2.4.0 due to upstream API\n   changes\n-  pytest-verbose-parametrize: Add support for revamped marker\n   infrastructure\n-  pytest-verbose-parametrize: Fix integration tests to support pytest\n   >= 4.1.0\n-  pytest-virtualenv: Add virtualenv as install requirement. Fixes #122\n-  pytest-webdriver: Fix RemovedInPytest4Warning using getfixturevalue\n-  circleci: Fix checks by skipping coverall submission for developer\n   without push access\n-  wheels: Generate universal wheels installable with both python 2.x\n   and 3.x\n-  dist: Remove support for building and distributing \\*.egg files\n-  VagrantFile: Install python 3.7 and initialize python 3.7 by default\n-  Fix DeprecationWarning warnings using \"logger.warning()\" function\n\n1.6.2 (2019-02-21)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-server-fixtures: suppress stacktrace if kill() is called\n-  pytest-server-fixtures: fix random port logic in TestServerV2\n\n1.6.1 (2019-02-12)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-server-fixtures: fix exception when attempting to access\n   hostname while server is not started\n\n1.6.0 (2019-02-12)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-server-fixtures: added previously removed TestServerV2.kill()\n   function\n-  pytest-profiling: pin more-itertools==5.0.0 in integration tests, as\n   that's a PY3 only release\n\n1.5.1 (2019-01-24)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-verbose-parametrize: fixed unicode parameters when using\n   ``@pytest.mark.parametrize``\n\n1.5.0 (2019-01-23)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-server-fixtures: made postgres fixtures and its tests\n   optional, like all other fixtures\n-  pytest-server-fixtures: reverted a fix for pymongo deprecation\n   warning, as this will break compatibility with pymongo 3.6.0\n-  pytest-server-fixtures: dropped RHEL5 support in httpd\n\n1.4.1 (2019-01-18)\n~~~~~~~~~~~~~~~~~~\n\n-  pytest-server-fixtures: server fixture binary path specified in ENV\n   now only affect server class 'thread'\n\n1.4.0 (2019-01-15)\n~~~~~~~~~~~~~~~~~~\n\n-  Fixing python 3 compatibility in Simple HTTP Server fixture\n-  Fixed broken tests in pytest-profiling\n-  Pinned pytest<4.0.0 until all deprecation warnings are fixed.\n-  pytest-webdriver: replaced deprecated phantomjs with headless Google\n   Chrome.\n-  Add Vagrantfile to project to make test environment portable.\n-  Add .editorconfig file to project.\n-  pytest-server-fixtures: add TestServerV2 with Docker and Kubernetes\n   support.\n-  pytest-server-fixtures: fix for an issue where MinioServer is not\n   cleaned up after use.\n-  pytest-server-fixtures: fix deprecation warnings when calling\n   pymongo.\n-  pytest-server-fixtures: close pymongo client on MongoTestServer\n   teardown.\n-  pytest-server-fixtures: upgrade Mongo, Redis and RethinkDB to\n   TestServerV2.\n-  coveralls: fix broken coveralls\n\n1.3.1 (2018-06-28)\n~~~~~~~~~~~~~~~~~~\n\n-  Use pymongo list\\_database\\_names() instead of the deprecated\n   database\\_names(), added pymongo>=3.6.0 dependency\n\n1.3.0 (2017-11-17)\n~~~~~~~~~~~~~~~~~~\n\n-  Fixed workspace deletion when teardown is None\n-  Fixed squash of root logger in pytest-listener\n-  Added S3 Minio fixture (many thanks to Gavin Bisesi)\n-  Added Postgres fixture (many thanks to Gavin Bisesi)\n-  Use requests for server fixtures http gets as it handles redirects\n   and proxies properly\n\n1.2.12 (2017-8-1)\n~~~~~~~~~~~~~~~~~\n\n-  Fixed regression on cacheing ephemeral hostname, some clients were\n   relying on this. This is now optional.\n\n1.2.11 (2017-7-21)\n~~~~~~~~~~~~~~~~~~\n\n-  Fix for OSX binding to illegal local IP range (Thanks to Gavin\n   Bisesi)\n-  Setup and Py3k fixes for pytest-profiling (Thanks to xoviat)\n-  We no longer try and bind port 5000 when reserving a local IP host,\n   as someone could have bound it to 0.0.0.0\n-  Fix for #46 sourcing gprof2dot when the local venv has not been\n   activated\n\n1.2.10 (2017-2-23)\n~~~~~~~~~~~~~~~~~~\n\n-  Handle custom Pytest test items in pytest-webdriver\n\n1.2.9 (2017-2-23)\n~~~~~~~~~~~~~~~~~\n\n-  Add username into mongo server fixture tempdir path to stop\n   collisions on shared multiuser filesystems\n\n1.2.8 (2017-2-21)\n~~~~~~~~~~~~~~~~~\n\n-  Return function results in shutil.run.run\\_as\\_main\n\n1.2.7 (2017-2-20)\n~~~~~~~~~~~~~~~~~\n\n-  More handling for older versions of path.py\n-  Allow virtualenv argument passing in pytest-virtualenv\n\n1.2.6 (2017-2-16 )\n~~~~~~~~~~~~~~~~~~\n\n-  Updated devpi server server setup for devpi-server >= 2.0\n-  Improvements for random port picking\n-  HTTPD server now binds to 0.0.0.0 by default to aid Selenium-style\n   testing\n-  Updated mongodb server args for mongodb >= 3.2\n-  Corrections for mongodb fixture config and improve startup logic\n-  Added module-scoped mongodb fixture\n-  Handling for older versions of path.py\n-  Fix for #40 where tests that chdir break pytest-profiling\n\n1.2.5 (2016-12-09)\n~~~~~~~~~~~~~~~~~~\n\n-  Improvements for server runner host and port generation, now supports\n   random local IPs\n-  Bugfix for RethinkDB fixture config\n\n1.2.4 (2016-11-14)\n~~~~~~~~~~~~~~~~~~\n\n-  Bugfix for pymongo extra dependency\n-  Windows compatibility fix for pytest-virtualenv (Thanks to\n   Jean-Christophe Fillion-Robin for PR)\n-  Fix symlink handling for\n   pytest-shutil.cmdline.get\\_real\\_python\\_executable\n\n1.2.3 (2016-11-7)\n~~~~~~~~~~~~~~~~~\n\n-  Improve resiliency of Mongo fixture startup checks\n\n1.2.2 (2016-10-27)\n~~~~~~~~~~~~~~~~~~\n\n-  Python 3 compatibility across most of the modules\n-  Fixed deprecated Path.py imports (Thanks to Bryan Moscon)\n-  Fixed deprecated multicall in pytest-profiling (Thanks to Paul van\n   der Linden for PR)\n-  Added devpi-server fixture to create an index per test function\n-  Added missing licence file\n-  Split up httpd server fixture config so child classes can override\n   loaded modules easier\n-  Added 'preserve\\_sys\\_path' argument to TestServer base class which\n   exports the current python sys.path to subprocesses.\n-  Updated httpd, redis and jenkins runtime args and paths to current\n   Ubuntu spec\n-  Ignore errors when tearing down workspaces to avoid race conditions\n   in 'shutil.rmtree' implementation\n\n1.2.1 (2016-3-1)\n~~~~~~~~~~~~~~~~\n\n-  Fixed pytest-verbose-parametrize for latest version of py.test\n\n1.2.0 (2016-2-19)\n~~~~~~~~~~~~~~~~~\n\n-  New plugin: git repository fixture\n\n1.1.1 (2016-2-16)\n~~~~~~~~~~~~~~~~~\n\n-  pytest-profiling improvement: escape illegal characters in .prof\n   files (Thanks to Aarni Koskela for the PR)\n\n1.1.0 (2016-2-15)\n~~~~~~~~~~~~~~~~~\n\n-  New plugin: devpi server fixture\n-  pytest-profiling improvement: overly-long .prof files are saved as\n   the short hash of the test name (Thanks to Vladimir Lagunov for PR)\n-  Changed default behavior of workspace.run() to not use a subshell for\n   security reasons\n-  Corrected virtualenv.run() method to handle arguments the same as the\n   parent method workspace.run()\n-  Removed deprecated '--distribute' from virtualenv args\n\n1.0.1 (2015-12-23)\n~~~~~~~~~~~~~~~~~~\n\n-  Packaging bugfix\n\n1.0.0 (2015-12-21)\n~~~~~~~~~~~~~~~~~~\n\n-  Initial public release\n\n\n\n",
  "requires_dist": [
    "pytest-fixture-config",
    "pytest-shutil",
    "pytest",
    "virtualenv",
    "mock ; extra == 'tests'"
  ],
  "requires_python": "",
  "current_version": "1.7.0",
  "released_versions": [
    "1.0.0",
    "1.0.1",
    "1.1.0",
    "1.2.11",
    "1.2.2",
    "1.2.4",
    "1.2.5",
    "1.2.7",
    "1.3.0",
    "1.4.0",
    "1.6.0",
    "1.7.0"
  ]
}
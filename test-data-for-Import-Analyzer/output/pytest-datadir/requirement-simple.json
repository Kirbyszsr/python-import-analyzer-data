{
  "name": "pytest-datadir",
  "description": "# pytest-datadir\n\npytest plugin for manipulating test data directories and files.\n\n[![Build Status](https://travis-ci.org/gabrielcnr/pytest-datadir.svg?branch=master)](https://travis-ci.org/gabrielcnr/pytest-datadir)\n[![PyPI](https://img.shields.io/pypi/v/pytest-datadir.svg)](https://pypi.python.org/pypi/pytest-datadir)\n[![PythonVersions](https://img.shields.io/pypi/pyversions/pytest-datadir.svg)](https://pypi.python.org/pypi/pytest-datadir)\n[![CondaForge](https://img.shields.io/conda/vn/conda-forge/pytest-datadir.svg)](https://anaconda.org/conda-forge/pytest-datadir)\n\n\n# Usage\npytest-datadir will look up for a directory with the name of your module or the global 'data' folder.\nLet's say you have a structure like this:\n\n```\n.\n\u251c\u2500\u2500 data/\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hello.txt\n\u251c\u2500\u2500 test_hello/\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 spam.txt\n\u2514\u2500\u2500 test_hello.py\n```\nYou can access the contents of these files using injected variables `datadir` (for *test_* folder) or `shared_datadir`\n(for *data* folder):\n\n```python\ndef test_read_global(shared_datadir):\n    contents = (shared_datadir / 'hello.txt').read_text()\n    assert contents == 'Hello World!\\n'\n\ndef test_read_module(datadir):\n    contents = (datadir / 'spam.txt').read_text()\n    assert contents == 'eggs\\n'\n```\n\npytest-datadir will copy the original file to a temporary folder, so changing the file contents won't change the original data file.\n\nBoth `datadir` and `shared_datadir` fixtures are `pathlib.Path` objects.\n\n# Releases\n\nFollow these steps to make a new release:\n\n1. Create a new branch `release-X.Y.Z` from `master`.\n2. Update `CHANGELOG.rst`.\n3. Open a PR.\n4. After it is **green** and **approved**, push a new tag in the format `X.Y.Z`.\n\nTravis will deploy to PyPI automatically.\n\nAfterwards, update the recipe in [conda-forge/pytest-datadir-feedstock](https://github.com/conda-forge/pytest-datadir-feedstock).\n\n# License\n\nMIT.\n\n\n\n",
  "requires_dist": [
    "pytest (>=2.7.0)",
    "pathlib2 ; python_version<\"3.4\""
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "current_version": "1.3.1",
  "released_versions": [
    "0.1.0",
    "0.2.0",
    "1.0.0",
    "1.0.1",
    "1.1.0",
    "1.2.0",
    "1.2.1",
    "1.3.0",
    "1.3.1"
  ]
}
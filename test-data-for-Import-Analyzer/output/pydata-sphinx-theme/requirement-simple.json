{
  "name": "pydata-sphinx-theme",
  "description": "# pydata-sphinx-theme\n\n![pypi](https://img.shields.io/pypi/v/pydata-sphinx-theme) [![conda-forge](https://img.shields.io/conda/vn/conda-forge/pydata-sphinx-theme.svg)](https://anaconda.org/conda-forge/pydata-sphinx-theme) [![continuous-integration](https://github.com/pydata/pydata-sphinx-theme/actions/workflows/tests.yml/badge.svg)](https://github.com/pydata/pydata-sphinx-theme/actions/workflows/tests.yml) [![docs](https://readthedocs.org/projects/pydata-sphinx-theme/badge/)](https://readthedocs.org/projects/pydata-sphinx-theme/builds/) [![codecov](https://codecov.io/gh/pydata/pydata-sphinx-theme/branch/master/graph/badge.svg?token=NwOObjYacn)](https://codecov.io/gh/pydata/pydata-sphinx-theme)\n\nA Bootstrap-based Sphinx theme from the PyData community.\n\nDemo site: https://pydata-sphinx-theme.readthedocs.io/en/latest/\n\n**Note**: This theme is originally being developed for the pandas docs (originally named \"pandas-sphinx-theme\"),\nbut since there is uptake in other projects, we are working on making this more\ngeneric and more easily extensible to suit the needs of the different projects.\n\nSites that are using this theme:\n\n- Pandas: https://pandas.pydata.org/docs/\n- NumPy: https://numpy.org/devdocs/\n- SciPy: https://scipy.github.io/devdocs/\n- Bokeh: https://docs.bokeh.org/en/dev/\n- JupyterHub and Binder: https://docs.mybinder.org/, http://z2jh.jupyter.org/en/latest/, https://repo2docker.readthedocs.io/en/latest/, https://jupyterhub-team-compass.readthedocs.io/en/latest/\n- Jupyter Book beta version uses an extension of this theme: https://beta.jupyterbook.org\n- CuPy: https://docs.cupy.dev/en/latest/\n- MegEngine: https://megengine.org.cn/doc/stable/zh/\n- Fairlearn: https://fairlearn.github.io/main/quickstart.html\n- NetworkX: https://networkx.org/documentation/latest/\n\n\n## Installation and usage\n\nThe theme is available on PyPI and conda-forge. You can install\nand use as follows:\n\n- Install the `pydata-sphinx-theme` in your doc build environment:\n\n  ```\n  pip install pydata-sphinx-theme\n  # or\n  conda install pydata-sphinx-theme --channel conda-forge\n  ```\n\n- Then, in the `conf.py` of your sphinx docs, you update the `html_theme`\n  configuration option:\n\n  ```\n  html_theme = \"pydata_sphinx_theme\"\n  ```\n\nAnd that's it!\n\nWell, in principle at least. In practice, there are might still be a few\npandas-specific things that are right now hard-coded in the theme. We also need\nto work on better configurability and extensibility. Feedback and contributions\nare very welcome!\n\n## Theme development\n\nContributions are very welcome! Installing the development version, building\nthe demo docs and developing the css/js of the theme, etc, is explained in\nmore detail in the contributing section of the documentation:\nhttps://pydata-sphinx-theme.readthedocs.io/en/latest/contributing.html\n\n\n## How is this theme working?\n\n### The html layout\n\nThe \"layout\" included in this theme is originally mainly targetted towards\ndocumentation sites with many pages, and where putting all navigation in a\nsingle sidebar can therefore get unwieldy.\n\nThe current layout features 3 navigation elements:\n\n- A top navbar with top-level navigation\n- A left sidebar with subsequent navigation up to single pages\n- A right sidebar with a local \"On this page\" table of contents\n\nWhat is put where is determined by the sphinx \"toctree\" (and such depending on\nthe structure of your sphinx docs). The first level of the toctree is put in the\ntop navbar, and the second (and potentially) third level is put in the left\nsidebar.\n\nIt should certainly be possible to make the exact used levels of the sphinx\ntoctree configurable.\n\n### Implementation details\n\nA second aspect of the design of this theme is that we are trying to make good\nuse of Bootstrap features and use as much as possible actual (templated) html\nand css to define the theme, instead of relying on sphinx to do custom\nformatting. This should make the theming and layouts more flexible to customize.\n\nTo this end, this package includes:\n\n- A [`BootstrapHTML5Translator`](./pydata_sphinx_theme/bootstrap_html_translator.py),\n  subclassing sphinx' translator, but overriding certain elements to generate\n  Bootstrap-compatible html. Currently, this includes: converting admonitions to\n  Bootstrap \"alert\" classes, and updating the classes used for html tables.\n- A [sphinx event](./pydata_sphinx_theme/__init__.py) to add navigation\n  objects into the html context which is available in the html (jinja2)\n  templates. This allows to put the structure of the navigation elements in the\n  actual layout, instead of having to rely on the hard-coded formatting of\n  sphinx (this is inspired on the navigation objects of mkdocs:\n  https://www.mkdocs.org/user-guide/custom-themes/#nav). We would love to see\n  this added to sphinx itself (instead of needing a sphinx event), but for now\n  did not yet get any reaction from the sphinx developers.\n\nThose items also avoid writing javascript functions to \"fix up\" the html\ngenerated by sphinx to make it suitable for theming.\n\n### What's the difference with bootstrap-sphinx-theme ?\n\nThere is already a sphinx Bootstrap theme used by some project in the community:\nhttps://github.com/ryan-roemer/sphinx-bootstrap-theme/\n\nCurrently, the main difference is that this theme is using Bootstrap 4 instead\nof 3 and provides a different default layout. At some point, it would be good to\ncontribute changes to that package (or at least the parts that deal with\nBootstrap and sphinx that could be shared).\n\nThe initial layout and css were inspired on the Bootstrap documentation site.\n\n\n",
  "requires_dist": [
    "sphinx",
    "beautifulsoup4",
    "docutils (<0.17)",
    "pytest-cov ; extra == 'coverage'",
    "codecov ; extra == 'coverage'",
    "sphinx ; extra == 'coverage'",
    "numpydoc ; extra == 'coverage'",
    "recommonmark ; extra == 'coverage'",
    "pandas ; extra == 'coverage'",
    "pytest ; extra == 'coverage'",
    "pytest-regressions ; extra == 'coverage'",
    "beautifulsoup4 ; extra == 'coverage'",
    "jupyter-sphinx ; extra == 'coverage'",
    "plotly ; extra == 'coverage'",
    "numpy ; extra == 'coverage'",
    "xarray ; extra == 'coverage'",
    "docutils (==0.16) ; extra == 'coverage'",
    "sphinx ; extra == 'test'",
    "numpydoc ; extra == 'test'",
    "recommonmark ; extra == 'test'",
    "pandas ; extra == 'test'",
    "pytest ; extra == 'test'",
    "pytest-regressions ; extra == 'test'",
    "beautifulsoup4 ; extra == 'test'",
    "jupyter-sphinx ; extra == 'test'",
    "plotly ; extra == 'test'",
    "numpy ; extra == 'test'",
    "xarray ; extra == 'test'",
    "docutils (==0.16) ; extra == 'test'"
  ],
  "requires_python": ">=3.5",
  "current_version": "0.6.3",
  "released_versions": [
    "0.1.0",
    "0.1.1",
    "0.2.0",
    "0.2.1",
    "0.2.2",
    "0.3.0",
    "0.3.1",
    "0.3.2",
    "0.4.0",
    "0.4.1",
    "0.4.2",
    "0.4.3",
    "0.5.0",
    "0.5.1",
    "0.5.2",
    "0.6.0",
    "0.6.1",
    "0.6.2",
    "0.6.3"
  ]
}
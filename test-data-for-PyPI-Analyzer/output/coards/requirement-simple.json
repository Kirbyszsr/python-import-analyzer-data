{
  "name": "coards",
  "description": "A COADS compliant time parser\n=============================\n\nThis module is intended to help parse time values represented using the `COARDS convention <http://ferret.wrc.noaa.gov/noaa_coop/coop_cdf_profile.html>`_. Here is a simple example:\n\n.. code-block:: pycon\n\n    >>> from coards import parse\n    >>> a = [1, 2, 3]\n    >>> units = 'days since 1998-03-01 12:00:00'\n    >>> b = [parse(value, units) for value in a] \n    >>> print b\n    [datetime.datetime(1998, 3, 2, 12, 0), datetime.datetime(1998, 3, 3, 12, 0), datetime.datetime(1998, 3, 4, 12, 0)]\n\nCredits\n-------\n\n- `Distribute`_\n- `Buildout`_\n- `modern-package-template`_\n\n.. _Buildout: http://www.buildout.org/\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n\n\nNews\n====\n\n1.0.5\n-----\n\n*Release date: 20130604*\n\n* Create converter object.\n\n1.0.4\n-----\n\n*Release date: 20130520*\n\n* Parse microseconds.\n\n1.0.3.2\n-------\n\n*Release date: 20130218*\n\n* Allow origin to be expressed only as HH.\n\n1.0.3.1\n-------\n\n*Release date: 20130214*\n\n* Fix minor typo in code.\n\n1.0.3\n-----\n\n*Release date: 20130214*\n\n* Create parser/formatter objects to avoid repeated parsing.\n* Happy Valentine's!\n\n1.0.2\n-----\n\n*Release date: 20120823*\n\n* Fixed regexp that parses the origin.\n\n1.0.1\n-----\n\n*Release date: 20120818*\n\n* Parse RFC3339 dates.\n\n1.0\n---\n\n*Release date: 20120529*\n\n* Refactored code so that it works with more dates.\n* Using modern-package-template for directory structure.",
  "requires_dist": null,
  "requires_python": null,
  "current_version": "1.0.5",
  "released_versions": [
    "0.1.0",
    "0.1.1",
    "0.1.2",
    "0.1.3",
    "0.1.4",
    "0.2.0",
    "0.2.1",
    "0.2.2",
    "1.0",
    "1.0.1",
    "1.0.2",
    "1.0.3",
    "1.0.3.1",
    "1.0.3.2",
    "1.0.4",
    "1.0.5"
  ]
}
{
  "name": "objgraph",
  "description": "Python Object Graphs\n====================\n\n.. image:: https://travis-ci.org/mgedmin/objgraph.svg?branch=master\n   :target: https://travis-ci.org/mgedmin/objgraph\n   :alt: Build Status\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/mgedmin/objgraph?branch=master&svg=true\n   :target: https://ci.appveyor.com/project/mgedmin/objgraph\n   :alt: Build Status (Windows)\n\n.. image:: https://coveralls.io/repos/mgedmin/objgraph/badge.svg?branch=master\n   :target: https://coveralls.io/r/mgedmin/objgraph?branch=master\n   :alt: Test Coverage\n\n.. image:: https://readthedocs.org/projects/objgraph/badge/?version=latest\n   :target: https://readthedocs.org/projects/objgraph/?badge=latest\n   :alt: Documentation Status\n\n\n``objgraph`` is a module that lets you visually explore Python object graphs.\n\nYou'll need `graphviz <https://www.graphviz.org/>`_ if you want to draw\nthe pretty graphs.\n\nI recommend `xdot <https://pypi.python.org/pypi/xdot>`_ for interactive use.\n``pip install xdot`` should suffice; objgraph will automatically look for it\nin your ``PATH``.\n\n\nInstallation and Documentation\n------------------------------\n\n``pip install objgraph`` or `download it from PyPI\n<https://pypi.python.org/pypi/objgraph>`_.\n\nDocumentation lives at https://mg.pov.lt/objgraph.\n\n\n.. _history:\n\nHistory\n-------\n\nI've developed a set of functions that eventually became objgraph when I\nwas hunting for memory leaks in a Python program.  The whole story -- with\nillustrated examples -- is in this series of blog posts:\n\n* `Hunting memory leaks in Python\n  <https://mg.pov.lt/blog/hunting-python-memleaks.html>`_\n* `Python object graphs\n  <https://mg.pov.lt/blog/python-object-graphs.html>`_\n* `Object graphs with graphviz\n  <https://mg.pov.lt/blog/object-graphs-with-graphviz.html>`_\n\n\n.. _devel:\n\nSupport and Development\n-----------------------\n\nThe source code can be found in this Git repository:\nhttps://github.com/mgedmin/objgraph.\n\nTo check it out, use ``git clone https://github.com/mgedmin/objgraph``.\n\nReport bugs at https://github.com/mgedmin/objgraph/issues.\n\n\n\nChanges\n=======\n\n\n\n3.5.0 (2020-10-11)\n------------------\n\n- Do not require ``mock`` for the test suite on Python 3; use unittest.mock\n  instead.\n\n- 100% test coverage for each version of Python rather than combined, using\n  ``coverage-python-version``.\n\n- Add the optional ``extra_node_attrs`` parameter to ``show_backrefs`` and\n  ``show_backrefs``\n\n- Fix IPython/Jupyter inline graph support code that would kick in even if you\n  explicitly passed a filename='foo.png' argument to\n  ``show_refs``/``show_backrefs``.  See `issue 47\n  <https://github.com/mgedmin/objgraph/issues/47>`_.\n\n- Add support for Python 3.8.\n\n- Drop support for Python 3.5.\n\n\n3.4.1 (2019-04-23)\n------------------\n\n- Add support for Python 3.7.\n\n- Drop support for Python 3.3 and 3.4.\n\n\n3.4.0 (2018-02-13)\n------------------\n\n- New functions: `get_new_ids`, `at_addrs`.\n\n  Contributed by Justin Black in `PR 36\n  <https://github.com/mgedmin/objgraph/pull/36>`_.\n\n\n3.3.0 (2017-12-28)\n------------------\n\n- New function: `growth`.\n\n\n3.2.0 (2017-12-20)\n------------------\n\n- New ``filter`` argument for `typestats`, `most_common_types`,\n  `show_most_common_types`, `show_growth`.\n\n- Show lambda functions in a more human-friendly way.\n\n\n3.1.2 (2017-11-27)\n------------------\n\n- Correct UTF-8 mojibake in the changelog and switch all links to HTTPS.\n\n\n3.1.1 (2017-10-30)\n------------------\n\n- Add support for Python 3.6.\n\n- Replace bare ``except:`` in ``safe_repr()`` with ``except Exception:``.\n\n\n3.1.0 (2016-12-07)\n------------------\n\n- Support displaying graphs inline in IPython/Jupyter notebooks (`issue 28\n  <https://github.com/mgedmin/objgraph/pull/28>`).\n\n\n3.0.1 (2016-09-17)\n------------------\n\n- The ``file`` argument of `show_most_common_types` and\n  `show_growth` now defaults to ``None`` instead of ``sys.stdout``.\n  ``None`` is interpreted to be the same as ``sys.stdout``, which means\n  the right stdout will be used if you change it at runtime (which happens,\n  in doctests).\n\n\n3.0.0 (2016-04-13)\n------------------\n\n- `show_most_common_types` and `show_growth` now accept a ``file``\n  argument if you want to redirect the output elsewhere.\n\n  Fixes `issue 24 <https://github.com/mgedmin/objgraph/pull/24>`_.  Contributed\n  by \"d-sun-d\".\n\n- Don't trust ``__class__`` to be accurate and ``__name__`` to be a string.\n  Fixes errors in some convoluted corner cases when mocks are involved.\n\n  Contributed by Andrew Shannon Brown in `PR 26\n  <https://github.com/mgedmin/objgraph/pull/26>`_.\n\n- Drop support for Python 2.4, 2.5, and 2.6.\n\n- Drop support for Python 3.1 and 3.2.\n\n- Add support for Python 3.5.\n\n\n2.0.1 (2015-07-28)\n------------------\n\n- Avoid creating reference cycles between the stack frame and the local\n  ``objects`` variable in `by_type`, `count`, and\n  `typestats`.\n\n  Fixes `issue 22 <https://github.com/mgedmin/objgraph/pull/22>`_.  Contributed\n  by Erik Bray.\n\n\n2.0.0 (2015-04-18)\n------------------\n\n- `show_refs` and `show_backrefs` now accept a file-like object\n  (via the new ``output`` argument) as an alternative to a filename.\n\n- Made internal helper methods private. This includes `find_chain`,\n  `show_graph`, `obj_node_id`, `obj_label`, `quote`,\n  `long_typename`, `safe_repr`, `short_repr`,\n  `gradient`, `edge_label`, and `_program_in_path`.\n\n- Correctly determine the name of old-style classes in `count`,\n  `by_type`, and graph drawing functions.\n\n  Fixes `issue 16 <https://github.com/mgedmin/objgraph/pull/16>`_.  Contributed\n  by Mike Lambert.\n\n\n1.8.1 (2014-05-15)\n------------------\n\n- Do not expect file objects to have an ``encoding`` attribute.  Makes objgraph\n  compatible with Eventlet's monkey-patching.\n\n  Fixes `issue 6 <https://github.com/mgedmin/objgraph/pull/6>`_.  Contributed\n  by Jakub Stasiak.\n\n\n1.8.0 (2014-02-13)\n------------------\n\n- Moved to GitHub.\n\n- Python 3.4 support (`LP#1270872 <https://launchpad.net/bugs/1270872>`_).\n\n- New function: `is_proper_module`.\n\n- New ``shortnames`` argument for `typestats`, `most_common_types`,\n  `show_most_common_types`, `show_growth`, `show_refs`,\n  and `show_backrefs`.\n\n  `count` and `by_type` accept fully-qualified type names now.\n\n  Fixes `issue 4 <https://github.com/mgedmin/objgraph/issues/4>`_.\n\n\n1.7.2 (2012-10-23)\n------------------\n\n- Bugfix: setup.py sdist was broken on Python 2.7 (UnicodeDecodeError in\n  tarfile).\n\n- The ``filename`` argument for `show_refs` and `show_backrefs` now\n  allows arbitrary image formats, not just PNG.  Patch by `Riccardo\n  Murri <https://launchpad.net/~rmurri>`_.\n\n- Temporary dot files are now named `objgraph-*.dot` instead of `tmp*.dot`.\n\n- Python 3.3 support: no code changes, but some tests started failing because\n  the new and improved dictionary implementation no longer holds references to\n  str objects used as dict keys.\n\n- Added a tox.ini for convenient multi-Python testing.\n\n\n1.7.1 (2011-12-11)\n------------------\n\n- Bugfix: non-ASCII characters in object representations would break graph\n  generation on Python 3.x, in some locales (e.g. with LC_ALL=C).  Reported and\n  fixed by `Stefano Rivera <https://launchpad.net/~stefanor>`_.\n\n- Bugfix: setup.py was broken on Python 3.x\n\n- Bugfix: dot.exe/xdot.exe were not found on Windows (`LP#767239\n  <https://launchpad.net/bugs/767239>`_).\n\n- Documentation updates: document the forgotten `find_ref_chain`,\n  update `show_chain` prototype.\n\n\n1.7.0 (2011-03-11)\n------------------\n\n- New function: `find_ref_chain`.\n\n- New ``backrefs`` argument for `show_chain`.\n\n- New function: `get_leaking_objects`, based on `a blog post by\n  Kristj\u00e1n Valur\n  <https://cosmicpercolator.com/2010/12/08/finding-c-reference-leaks-using-the-gc-module/>`_.\n\n- New ``objects`` argument for `count`, `typestats`,\n  `most_common_types`, `show_most_common_types`, and\n  `by_type`.\n\n- Edges pointing to function attributes such as __defaults__ or __globals__\n  are now labeled.\n\n- Edge labels that are not simple strings now show the type.\n\n- Bugfix: '\\0' and other unsafe characters used in a dictionary key could\n  break graph generation.\n\n- Bugfix: show_refs(..., filename='graph.dot') would then go to complain\n  about unrecognized file types and then produce a png.\n\n\n1.6.0 (2010-12-18)\n------------------\n\n- Python 3 support, thanks to Stefano Rivera (fixes `LP#687601\n  <https://launchpad.net/bugs/687601>`_).\n\n- Removed weird weakref special-casing.\n\n\n1.5.1 (2010-12-09)\n------------------\n\n- Avoid test failures in uncollectable-garbage.txt (fixes `LP#686731\n  <https://launchpad.net/bugs/686731>`_).\n\n- Added HACKING.txt (later renamed to HACKING.rst).\n\n\n1.5.0 (2010-12-05)\n------------------\n\n- Show frame objects as well (fixes `LP#361704\n  <https://launchpad.net/bugs/361704>`_).\n\n- New functions: `show_growth`, `show_chain`.\n\n- `find_backref_chain` returns ``[obj]`` instead of ``None`` when a chain\n  could not be found.  This makes ``show_chain(find_backref_chain(...), ...)``\n  not break.\n\n- Show how many references were skipped from the output of\n  `show_refs`/`show_backrefs` by specifying ``too_many``.\n\n- Make `show_refs` descend into modules.\n\n- Do not highlight classes that define a ``__del__``, highlight only instances of\n  those classes.\n\n- Option to show reference counts in `show_refs`/`show_backrefs`.\n\n- Add `Sphinx <https://pypi.python.org/pypi/Sphinx>`_ documentation and a PyPI\n  long description.\n\n\n1.4.0 (2010-11-03)\n------------------\n\n- Compatibility with Python 2.4 and 2.5 (``tempfile.NamedTemporaryFile`` has no\n  ``delete`` argument).\n\n- New function: `most_common_types`.\n\n\n1.3.1 (2010-07-17)\n------------------\n\n- Rebuild an sdist with no missing files (fixes `LP#606604\n  <https://launchpad.net/bugs/606604>`_).\n\n- Added MANIFEST.in and a Makefile to check that setup.py sdist generates\n  source distributions with no files missing.\n\n\n1.3 (2010-07-13)\n----------------\n\n- Highlight objects with a ``__del__`` method.\n\n- Fixes `LP#483411 <https://launchpad.net/bugs/483411>`_: suggest always passing\n  ``[obj]`` to `show_refs`, `show_backrefs`, since obj might be a\n  list/tuple.\n\n- Fixes `LP#514422 <https://launchpad.net/bugs/514422>`_: `show_refs`,\n  `show_backrefs` don't create files in the current working directory any\n  more.  Instead they accept a filename argument, which can be a .dot file or a\n  .png file.  If None or not specified, those functions will try to spawn xdot\n  as before.\n\n- New extra_info argument to graph-generating functions (patch by Thouis Jones,\n  `LP#558914 <https://launchpad.net/bugs/558914>`_).\n\n- setup.py should work with distutils now (`LP#604430\n  <https://launchpad.net/bugs/604430>`_, thanks to Randy Heydon).\n\n\n1.2 (2009-03-25)\n----------------\n\n- Project website, public source repository, uploaded to PyPI.\n\n- No code changes.\n\n\n1.1 (2008-09-10)\n----------------\n\n- New function: `show_refs` for showing forward references.\n\n- New functions: `typestats` and `show_most_common_types`.\n\n- Object boxes are less crammed with useless information (such as IDs).\n\n- Spawns `xdot <https://pypi.python.org/pypi/xdot>`_ if it is available.\n\n\n1.0 (2008-06-14)\n----------------\n\n- First public release.\n\n\n",
  "requires_dist": [
    "graphviz"
  ],
  "requires_python": "",
  "current_version": "3.5.0",
  "released_versions": [
    "1.1dev",
    "1.2",
    "1.3",
    "1.3.1",
    "1.4.0",
    "1.5.0",
    "1.5.1",
    "1.6.0",
    "1.7.0",
    "1.7.1",
    "1.7.2",
    "1.8.0",
    "1.8.1",
    "2.0.0",
    "2.0.1",
    "3.0.0",
    "3.0.1",
    "3.1.0",
    "3.1.1",
    "3.1.2",
    "3.2.0",
    "3.3.0",
    "3.4.0",
    "3.4.1",
    "3.5.0"
  ]
}
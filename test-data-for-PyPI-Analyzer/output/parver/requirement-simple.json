{
  "name": "parver",
  "description": ".. image:: https://img.shields.io/pypi/v/parver.svg\n   :target: https://pypi.org/project/parver/\n   :alt: PyPI\n\n.. image:: https://img.shields.io/badge/docs-read%20now-blue.svg\n   :target: https://parver.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://github.com/RazerM/parver/workflows/CI/badge.svg?branch=master\n   :target: https://github.com/RazerM/parver/actions?workflow=CI\n   :alt: CI Status\n\n.. image:: https://codecov.io/gh/RazerM/parver/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/RazerM/parver\n   :alt: Test coverage\n\n.. image:: https://img.shields.io/github/license/RazerM/parver.svg\n   :target: https://raw.githubusercontent.com/RazerM/parver/master/LICENSE.txt\n   :alt: MIT License\n\nparver\n======\n\nparver allows parsing and manipulation of `PEP 440`_ version numbers.\n\nExample\n=======\n\n.. code:: python\n\n    >>> Version.parse('1.3').bump_dev()\n    <Version '1.3.dev0'>\n    >>> v = Version.parse('v1.2.alpha-3')\n    >>> v.is_alpha\n    True\n    >>> v.pre\n    3\n    >>> v\n    <Version 'v1.2.alpha-3'>\n    >>> v.normalize()\n    <Version '1.2a3'>\n\n.. _`PEP 440`: https://www.python.org/dev/peps/pep-0440/\n\n\n",
  "requires_dist": [
    "arpeggio (~=1.7)",
    "attrs (>=19.2)",
    "six (~=1.13)",
    "doc8 ; extra == 'docstest'",
    "sphinx ; extra == 'docstest'",
    "sphinx-rtd-theme ; extra == 'docstest'",
    "flake8 ; extra == 'pep8test'",
    "pep8-naming ; extra == 'pep8test'",
    "pytest ; extra == 'test'",
    "hypothesis ; extra == 'test'",
    "pretend ; extra == 'test'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "current_version": "0.3.1",
  "released_versions": [
    "0.1.0",
    "0.1.1",
    "0.2.0",
    "0.2.1",
    "0.3.0",
    "0.3.1"
  ]
}
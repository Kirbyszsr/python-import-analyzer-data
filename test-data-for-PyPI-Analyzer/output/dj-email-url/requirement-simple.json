{
  "name": "dj-email-url",
  "description": "=============================\ndj-email-url |latest-version|\n=============================\n\n|travis-ci| |codecov| |python-support|\n\nThis utility is based on dj-database-url by Kenneth Reitz.\n\nIt allows to utilize the 12factor_ inspired environments variable to\nconfigure the email backend in a Django application.\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/dj-email-url.svg\n   :alt: Latest version on PyPI\n   :target: https://pypi.org/project/dj-email-url/\n.. |travis-ci| image:: https://img.shields.io/travis/migonzalvar/dj-email-url/master.svg\n   :alt: Build status\n   :target: https://travis-ci.org/migonzalvar/dj-email-url\n.. |codecov| image:: https://codecov.io/gh/migonzalvar/dj-email-url/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/migonzalvar/dj-email-url\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/dj-email-url.svg\n   :target: https://pypi.python.org/pypi/dj-email-url\n   :alt: Python versions\n\n.. _12factor: http://www.12factor.net/backing-services\n\nUsage\n=====\n\nImport the package in ``settings.py``:\n\n.. code:: python\n\n    import dj_email_url\n\n\nFetch your email configuration values. The default option is fetch them from\n``EMAIL_URL`` environment variable:\n\n.. code:: python\n\n    email_config = dj_email_url.config()\n\nOther option is parse an arbitrary email URL:\n\n.. code:: python\n\n    email_config = dj_email_url.parse('smtp://...')\n\n\nFinally, it is **necessary** to assign values to settings:\n\n.. code:: python\n\n    EMAIL_FILE_PATH = email_config['EMAIL_FILE_PATH']\n    EMAIL_HOST_USER = email_config['EMAIL_HOST_USER']\n    EMAIL_HOST_PASSWORD = email_config['EMAIL_HOST_PASSWORD']\n    EMAIL_HOST = email_config['EMAIL_HOST']\n    EMAIL_PORT = email_config['EMAIL_PORT']\n    EMAIL_BACKEND = email_config['EMAIL_BACKEND']\n    EMAIL_USE_TLS = email_config['EMAIL_USE_TLS']\n    EMAIL_USE_SSL = email_config['EMAIL_USE_SSL']\n\nAlternatively, it is possible to use this less explicit shortcut:\n\n.. code:: python\n\n    vars().update(email_config)\n\nSupported backends\n==================\n\nCurrently, `dj-email-url` supports:\n\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| Backend   | EMAIL_URL                                        | Description                                               |\n+===========+==================================================+===========================================================+\n| Console   | ``console:``                                     | Writes to stdout (development)                            |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| SMTP      | ``smtp:``                                        | Sends using a mail transfer agent at localhost on port 25 |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| SMTP      | ``submission://USER:PASSWORD@smtp.sendgrid.com`` | Sends using SendGrid_ SMTP on port 587 (STARTTLS)         |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| File      | ``file:``                                        | Writes to a file                                          |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| In-memory | ``memory:``                                      |                                                           |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n| Dummy     | ``dummy:``                                       |                                                           |\n+-----------+--------------------------------------------------+-----------------------------------------------------------+\n\n.. _SendGrid: https://sendgrid.com/docs/Integrate/Frameworks/django.html\n\n\n.. warning:: Using special characters on passwords\n\n    To use characters that have a special meaning in an URL (think of ``&``)\n    you should use `percent encoding <https://en.wikipedia.org/wiki/Percent-encoding>`_.\n    For example, ``m&m`` would become ``m%26m``.\n\n    Because the percent character itself (``%``) serves as the indicator for\n    percent-encoded octets, it must be percent-encoded as ``%25``.\n\n    .. code:: pycon\n\n        >>> from urllib.parse import quote_plus\n        >>> import dj_email_url\n        >>> quote_plus(\"!@#$%^&*\")\n        '%21%40%23%24%25%5E%26%2A'\n        >>> dj_email_url.parse(\"smtp://user:%21%40%23%24%25%5E%26%2A@localhost\")[\"EMAIL_HOST_PASSWORD\"]\n        '!@#$%^&*'\n\n\nSet from email addresses\n========================\n\n`dj-email-url` also supports to optionally specify origin email addreses.\n\n+--------------------+-------------------------+\n| Setting            | Query parameter         |\n+====================+=========================+\n| SERVER_EMAIL       | ``_server_email``       |\n+--------------------+-------------------------+\n| DEFAULT_FROM_EMAIL | ``_default_from_email`` |\n+--------------------+-------------------------+\n\nFor example: ``smtp://USER:PASSWORD@smtp.example.com/?_server_email=error@example.com``\n\nDo not forget to assign values to settings:\n\n.. code:: python\n\n    SERVER_EMAIL = email_config.get('SERVER_EMAIL', 'root@localhost')\n    DEFAULT_FROM_EMAIL = email_config.get('DEFAULT_FROM_EMAIL', 'webmaster@localhost')\n\n\nMore info\n=========\n\nSMTP backend\n------------\n\nThe `SMTP backend`__ is selected when the scheme in the URL if one these:\n\n__ https://docs.djangoproject.com/en/dev/topics/email/#smtp-backend\n\n============================ ============ =========================\nValue                        Default port Comment\n============================ ============ =========================\n``smtp``                     25           Local mail transfer agent\n``submission`` or ``submit`` 587          SMTP with STARTTLS\n============================ ============ =========================\n\n\n*Changed in version 0.1:* The use of ``smtps`` is now discouraged__\nThe value ``smtps`` was used to indicate to use TLS connections,\nthat is to set ``EMAIL_USE_TLS`` to ``True``.\nNow is recommended to use ``submission`` or ``submit``\n(see `service name for port numbers`_ or `Uniform Resource Identifier Schemes`_ at IANA).\n\n__ SMTPS_\n\n.. _SMTPS: https://en.wikipedia.org/wiki/SMTPS\n\n.. _service name for port numbers: https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=587\n\n.. _Uniform Resource Identifier Schemes: https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml\n\nOn the most popular mail configuration option is\nto use a **third party SMTP server to relay emails**.\n\n.. code:: pycon\n\n    >>> url = 'submission://user@example.com:pass@smtp.example.com'\n    >>> url = dj_email_url.parse(url)\n    >>> assert url['EMAIL_PORT'] == 587\n    >>> assert url['EMAIL_USE_SSL'] is False\n    >>> assert url['EMAIL_USE_TLS'] is True\n\nOther common option is to use a **local mail transfer agent** Postfix or Exim.\nIn this case it as easy as:\n\n.. code:: pycon\n\n    >>> url = 'smtp://'\n    >>> url = dj_email_url.parse(url)\n    >>> assert url['EMAIL_HOST'] == 'localhost'\n    >>> assert url['EMAIL_PORT'] == 25\n    >>> assert url['EMAIL_USE_SSL'] is False\n    >>> assert url['EMAIL_USE_TLS'] is False\n\nIt is also possible to configure **SMTP-over-SSL** (usually on 465).\nThis configuration is not generally recommended but might be needed for legacy systems.\nTo apply use this configuration specify SSL using a `ssl=True` as a query parameter\nand indicate the port explicitly:\n\n.. code:: pycon\n\n    >>> url = 'smtp://user@domain.com:pass@smtp.example.com:465/?ssl=True'\n    >>> url = dj_email_url.parse(url)\n    >>> assert url['EMAIL_PORT'] == 465\n    >>> assert url['EMAIL_USE_SSL'] is True\n    >>> assert url['EMAIL_USE_TLS'] is False\n\nFile backend\n------------\n\nThe file backend is the only one which needs a path. The url path is store\nin ``EMAIL_FILE_PATH`` key.\n\nChange Log\n==========\n\nUnreleased\n----------\n\n1.0.2_ - 2021-01-23\n-------------------\n\n.. _1.0.2: https://pypi.python.org/pypi/dj-email-url/1.0.2\n\n- Add support for Python 3.9 (@pauloxnet)\n\n1.0.1_ - 2020-06-03\n-------------------\n\n.. _1.0.1: https://pypi.python.org/pypi/dj-email-url/1.0.1\n\n- Included LICENSE file in tarball. Thanks to @fabaff.\n\n1.0.0_ - 2020-02-16\n-------------------\n\n.. _1.0.0: https://pypi.python.org/pypi/dj-email-url/1.0.0\n\n- Removed support for Python versions which reached end-of-life.\n\n- Fixed typo. Thanks to @jeffmacdonald.\n\n0.2.0_ - 2019-04-08\n-------------------\n\n.. _0.2.0: https://pypi.python.org/pypi/dj-email-url/0.2.0\n\n- Added support for ``DEFAULT_FROM_EMAIL`` and ``SERVER_EMAIL`` in the URL as\n  query parameters.\n\n0.1.0_ - 2018-03-24\n-------------------\n\n.. _0.1.0: https://pypi.python.org/pypi/dj-email-url/0.1.0\n\n- Added new schemes ``submission`` and ``submit``\n  to select SMTP backend on port 587 with STARTTLS.\n  Thanks to @LEW21 to suggest to include new `submit` URI.\n\n- Discouraged the use of scheme ``smtps`` and add a user warning.\n  Thanks to @LEW21 to alert about this confusing usage.\n\n- Expand which values are considered as truthy on a query string param. Now,\n  `1`, `on`, `true`, and `yes`, as a single character or in all case variants\n  (lower, upper and title case) are considered as `True`.\n\n0.0.10_ - 2016-10-14\n--------------------\n\n- Post release version to fix release date in change log.\n\n0.0.9_ - 2016-10-14\n-------------------\n\n- Fix case when user sets ssl=False in its url (thanks bogdal)\n\n0.0.8_ - 2016-06-07\n-------------------\n\n- Allow universal wheel\n\n0.0.7_ - 2016-05-31\n-------------------\n\n- Add EMAIL_USE_SSL setting to docs and set a default value (thanks iraycd).\n- Add coverage (thanks iraycd).\n\n0.0.6_ - 2016-04-18\n-------------------\n\n- Fix error parsing URL without credentials (thanks martinmaillard).\n\n0.0.5_ - 2016-04-17\n-------------------\n\n- Allow URL encoded credentials (thanks kane-c).\n\n0.0.4_ - 2015-03-05\n-------------------\n\n- Fix README.\n\n0.0.3_ - 2015-03-05\n-------------------\n\n- Add change log.\n\n- Add `ssl=` option as a query parameter for SMTP backend.\n\n- Add Travis continuous integration.\n\n0.0.2_ - 2014-03-12\n-------------------\n\n- Add Python 3 support.\n\n0.0.1_ - 2013-02-12\n-------------------\n\n- Initial version.\n\n.. _0.0.1: https://pypi.python.org/pypi/dj-email-url/0.0.1\n.. _0.0.2: https://pypi.python.org/pypi/dj-email-url/0.0.2\n.. _0.0.3: https://pypi.python.org/pypi/dj-email-url/0.0.3\n.. _0.0.4: https://pypi.python.org/pypi/dj-email-url/0.0.4\n.. _0.0.5: https://pypi.python.org/pypi/dj-email-url/0.0.5\n.. _0.0.6: https://pypi.python.org/pypi/dj-email-url/0.0.6\n.. _0.0.7: https://pypi.python.org/pypi/dj-email-url/0.0.7\n.. _0.0.8: https://pypi.python.org/pypi/dj-email-url/0.0.8\n.. _0.0.9: https://pypi.python.org/pypi/dj-email-url/0.0.9\n.. _0.0.10: https://pypi.python.org/pypi/dj-email-url/0.0.10\n\n\n",
  "requires_dist": null,
  "requires_python": "",
  "current_version": "1.0.2",
  "released_versions": [
    "0.0.1",
    "0.0.10",
    "0.0.2",
    "0.0.3",
    "0.0.4",
    "0.0.5",
    "0.0.6",
    "0.0.7",
    "0.0.8",
    "0.0.9",
    "0.1.0",
    "0.2.0",
    "1.0.0",
    "1.0.1",
    "1.0.2"
  ]
}
{
  "name": "pytest-freezegun",
  "description": "================\npytest-freezegun\n================\n\n\n.. image:: https://img.shields.io/pypi/v/pytest-freezegun.svg\n    :target: https://pypi.python.org/pypi/pytest-freezegun/\n\n.. image:: https://travis-ci.org/ktosiek/pytest-freezegun.svg?branch=master\n    :target: https://travis-ci.org/ktosiek/pytest-freezegun\n    :alt: See Build Status on Travis CI\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/ktosiek/pytest-freezegun?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/ktosiek/pytest-freezegun/branch/master\n    :alt: See Build Status on AppVeyor\n\nWrap tests with fixtures in freeze_time\n\n\nFeatures\n--------\n\n* Freeze time in both the test and fixtures\n* Access the freezer when you need it\n\n\nInstallation\n------------\n\nYou can install \"pytest-freezegun\" via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-freezegun\n\n\nUsage\n-----\n\nFreeze time by using the ``freezer`` fixture::\n\n    def test_frozen_date(freezer):\n        now = datetime.now()\n        time.sleep(1)\n        later = datetime.now()\n        assert now == later\n\nThis can then be used to move time::\n\n    def test_moving_date(freezer):\n        now = datetime.now()\n        freezer.move_to('2017-05-20')\n        later = datetime.now()\n        assert now != later\n\nYou can also pass arguments to freezegun by using the ``freeze_time`` mark::\n\n    @pytest.mark.freeze_time('2017-05-21')\n    def test_current_date():\n        assert date.today() == date(2017, 5, 21)\n\nThe ``freezer`` fixture and ``freeze_time`` mark can be used together,\nand they work with other fixtures::\n\n    @pytest.fixture\n    def current_date():\n        return date.today()\n\n    @pytest.mark.freeze_time\n    def test_changing_date(current_date, freezer):\n        freezer.move_to('2017-05-20')\n        assert current_date == date(2017, 5, 20)\n        freezer.move_to('2017-05-21')\n        assert current_date == date(2017, 5, 21)\n\nThey can also be used in class-based tests::\n\n    class TestDate:\n\n        @pytest.mark.freeze_time\n        def test_changing_date(self, current_date, freezer):\n            freezer.move_to('2017-05-20')\n            assert current_date == date(2017, 5, 20)\n            freezer.move_to('2017-05-21')\n            assert current_date == date(2017, 5, 21)\n\n\nContributing\n------------\n\nContributions are very welcome.\nTests can be run with `tox`_.\nYou can later check coverage with `coverage combine && coverage html`.\nPlease try to keep coverage at least the same before you submit a pull request.\n\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license, \"pytest-freezegun\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n\nCredits\n-------\n\nThis `Pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `Cookiecutter-pytest-plugin`_ template.\n\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/ktosiek/pytest-freezegun/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`PyPI`: https://pypi.python.org/pypi\n\n\n",
  "requires_dist": [
    "freezegun (>0.3)",
    "pytest (>=3.0.0)"
  ],
  "requires_python": "",
  "current_version": "0.4.2",
  "released_versions": [
    "0.1.0",
    "0.2.0",
    "0.3.0",
    "0.3.0.post1",
    "0.4.1",
    "0.4.2"
  ]
}
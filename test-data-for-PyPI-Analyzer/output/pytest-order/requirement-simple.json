{
  "name": "pytest-order",
  "description": "_pytest-order_ - a pytest plugin to order test execution\n========================================================\n\n[![PyPI version](https://badge.fury.io/py/pytest-order.svg)](https://pypi.org/project/pytest-order) [![Testsuite](https://github.com/pytest-dev/pytest-order/workflows/Testsuite/badge.svg)](https://github.com/pytest-dev/pytest-order/actions?query=workflow%3ATestsuite) [![DocBuild](https://github.com/pytest-dev/pytest-order/workflows/DocBuild/badge.svg)](https://github.com/pytest-dev/pytest-order/actions?query=workflow%3ADocBuild) [![codecov](https://codecov.io/gh/pytest-dev/pytest-order/branch/main/graph/badge.svg?token=M9PHWZSHUU)](https://codecov.io/gh/pytest-dev/pytest-order) [![Python version](https://img.shields.io/pypi/pyversions/pytest-order.svg)](https://pypi.org/project/pytest-order)\n\n`pytest-order` is a pytest plugin that allows you to customize the order in which\nyour tests are run. It uses the marker `order` that defines when a specific\ntest shall be run relative to the other tests. \n\n`pytest-order` is a fork of\n[pytest-ordering](https://github.com/ftobia/pytest-ordering) that provides\nsome additional features - see [below](#comparison-with-pytest_ordering) for\ndetails.\n\n`pytest-order` works with Python 2.7 and 3.5 - 3.10, with pytest \nversions >= 3.7.0, and runs on Linux, macOS and Windows.\n\nDocumentation\n-------------\nApart from this overview, the following information is available:\n- usage documentation for the [latest release](https://pytest-dev.github.io/pytest-order/stable/)\n- usage documentation for the [current main branch](https://pytest-dev.github.io/pytest-order/dev/)\n- all examples shown in the documentation can also be found in the \n  [repository](https://github.com/pytest-dev/pytest-order/tree/main/example)\n- the [Release Notes](https://github.com/pytest-dev/pytest-order/blob/main/CHANGELOG.md)\n  with a list of changes in the latest versions\n- a [list of open issues](https://github.com/pytest-dev/pytest-order/blob/main/old_issues.md)\n  in the original project and their handling in `pytest-order`\n\nOverview\n--------\n_(adapted from the original project)_\n\nHave you ever wanted to easily run one of your tests before any others run?\nOr run some tests last? Or run this one test before that other test? Or\nmake sure that this group of tests runs after this other group of tests?\n\nNow you can.\n\nInstall with:\n\n    pip install pytest-order\n\nThis defines the ``order`` marker that you can use in your code with\ndifferent attributes. \n\nFor example, this code:\n\n    import pytest\n\n    @pytest.mark.order(2)\n    def test_foo():\n        assert True\n\n    @pytest.mark.order(1)\n    def test_bar():\n        assert True\n\nyields the output:\n\n    $ pytest test_foo.py -vv\n    ============================= test session starts ==============================\n    platform darwin -- Python 3.7.1, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- env/bin/python\n    plugins: order\n    collected 2 items\n\n    test_foo.py:7: test_bar PASSED\n    test_foo.py:3: test_foo PASSED\n\n    =========================== 2 passed in 0.01 seconds ===========================\n\nFeatures\n--------\n`pytest-order` provides the following features:\n- ordering of tests by index, as shown above\n- ordering of tests both from the start and from the end (via negative\n  index)\n- ordering of tests relative to each other (via the `before` and `after`\n  marker attributes) \n- session-, module- and class-scope ordering via the ``order-scope`` option\n- directory scope ordering via the ``order-scope-level`` option\n- hierarchical module and class-level ordering via the ``group-order-scope``\n  option\n- ordering tests with `pytest-dependency` markers if using the\n  ``order-dependencies`` option\n- sparse ordering of tests via the ``sparse-ordering`` option\n\nA usage guide for each feature can be\nfound in the [documentation](https://pytest-dev.github.io/pytest-order/dev/).\n\nContributing\n------------\nContributions are very welcome. Tests can be run with \n[tox](https://tox.readthedocs.io/en/latest/), please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nLicense\n-------\nDistributed under the terms of the [MIT](http://opensource.org/licenses/MIT)\nlicense, `pytest-order` is free and open source software.\n\nHistory\n-------\nThis is a fork of [pytest-ordering](https://github.com/ftobia/pytest-ordering).\nThat project is not maintained anymore, and there are several helpful PRs\nthat are now integrated into `pytest-order`. The idea and most of the code\nhas been created by Frank Tobia, the author of that plugin, and\n[contributors](https://github.com/pytest-dev/pytest-order/blob/main/AUTHORS).\n\nComparison with pytest_ordering\n-------------------------------\nWhile derived from `pytest_ordering`, `pytest-order` is **not** compatible\nwith `pytest-ordering` due to the changed marker name (`order` instead of\n`run`). Additional markers are integrated into the `order` marker (for a \nrationale see also\n[this issue](https://github.com/ftobia/pytest-ordering/issues/38)).\n\nOrdering relative to other tests and all the configuration options are not\navailable in the released version of `pytest-ordering`.\nHowever, most of these features are derived from \n[issues](https://github.com/pytest-dev/pytest-order/blob/main/old_issues.md)\nand pull requests already existing in `pytest-ordering`. \n\n\n",
  "requires_dist": [
    "pytest (>=3.7)"
  ],
  "requires_python": "",
  "current_version": "0.11.0",
  "released_versions": [
    "0.10.0",
    "0.11.0",
    "0.7.1",
    "0.8.0",
    "0.8.1",
    "0.9.0",
    "0.9.1",
    "0.9.2",
    "0.9.3",
    "0.9.4",
    "0.9.5"
  ]
}
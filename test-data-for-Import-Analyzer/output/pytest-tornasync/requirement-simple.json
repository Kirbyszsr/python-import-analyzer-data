{
  "name": "pytest-tornasync",
  "description": "================\npytest-tornasync\n================\n\n.. image:: https://travis-ci.org/eukaryote/pytest-tornasync.svg?branch=master\n    :target: https://travis-ci.org/eukaryote/pytest-tornasync\n\nA simple pytest plugin that provides some helpful fixtures for testing\nTornado (version 5.0 or newer)  apps and easy handling of plain\n(undecoratored) native coroutine tests (Python 3.5+).\n\nWhy another Tornado pytest plugin when the excellent ``pytest-tornado`` already\nexists? The main reason is that I didn't want to have to decorate every test\ncoroutine with ``@pytest.mark.gen_test``. This plugin doesn't have anything\nlike ``gen_test``. Defining a test with ``async def`` and a name that\nbegins with ``test_`` is all that is required.\n\n\nInstallation\n------------\n\nInstall using pip, which must be run with Python 3.5+:\n\n.. code-block:: sh\n\n    pip install pytest-tornasync\n\n\nUsage\n-----\n\nDefine an ``app`` fixture:\n\n.. code-block:: python\n\n    import pytest\n\n\n    @pytest.fixture\n    def app():\n        import yourapp\n        return yourapp.make_app()  # a tornado.web.Application\n\n\nCreate tests as native coroutines using Python 3.5+ ``async def``:\n\n.. code-block:: python\n\n    async def test_app(http_server_client):\n        resp = await http_server_client.fetch('/')\n        assert resp.code == 200\n        # ...\n\n\nFixtures\n--------\n\nWhen the plugin is installed, then ``pytest --fixtures`` will show\nthe fixtures that are available:\n\nhttp_server_port\n    Port used by `http_server`.\nhttp_server\n    Start a tornado HTTP server that listens on all available interfaces.\n\n    You must create an `app` fixture, which returns\n    the `tornado.web.Application` to be tested.\n\n    Raises:\n    FixtureLookupError: tornado application fixture not found\nhttp_server_client\n    Create an asynchronous HTTP client that can fetch from `http_server`.\nhttp_client\n    Create an asynchronous HTTP client that can fetch from anywhere.\nio_loop\n    Create a new `tornado.ioloop.IOLoop` for each test case.\n\n\n\nExamples\n--------\n\n.. code-block:: python\n\n    import time\n\n    import tornado.web\n    import tornado.gen\n\n    import pytest\n\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write(\"Hello, world!\")\n\n\n    @pytest.fixture\n    def app():\n        return tornado.web.Application([(r\"/\", MainHandler)])\n\n\n    async def test_http_server_client(http_server_client):\n        # http_server_client fetches from the `app` fixture and takes path\n        resp = await http_server_client.fetch('/')\n        assert resp.code == 200\n        assert resp.body == b\"Hello, world!\"\n\n\n    async def test_http_client(http_client):\n        # http_client fetches from anywhere and takes full URL\n        resp = await http_client.fetch('http://httpbin.org/status/204')\n        assert resp.code == 204\n\n\n    async def example_coroutine(period):\n        await tornado.gen.sleep(period)\n\n\n    async def test_example():\n        # no fixtures needed\n        period = 1.0\n        start = time.time()\n        await example_coroutine(period)\n        elapsed = time.time() - start\n        assert elapsed >= period\n\n\nChanges\n=======\n\n0.6.0 (2018-11-19)\n------------------\n\n - minor updates to avoid a pytest warning under pytest 4\n - repo switch to using a 'src' dir\n\n\n0.5.0 (2018-05-28)\n------------------\n\n - updated to work with Tornado 5, which is now the minimum required version\n - require pytest >= 3.0\n - the `io_loop` fixture always refers to a `tornado.ioloop.IOLoop instance` now\n - the `io_loop_asyncio` and `io_loop_tornado` fixtures have been removed, since\n   now that Tornado 5 always uses asyncio under Python 3, there would be no\n   difference between the two fixtures, so `io_loop` is all that is needed\n - tox tests now test more versions of Tornado (5.0.* and latest 5.*),\n   Pytest (3.0.* and latest 3.*), and Python (3.5, 3.6, 3.7, and pypy3).\n\n\n",
  "requires_dist": [
    "pytest (>=3.0)",
    "tornado (>=5.0)"
  ],
  "requires_python": "",
  "current_version": "0.6.0.post2",
  "released_versions": [
    "0.2.0",
    "0.3.0",
    "0.4.0",
    "0.5.0",
    "0.6.0",
    "0.6.0.post1",
    "0.6.0.post2"
  ]
}
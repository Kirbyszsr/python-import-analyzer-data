{
  "name": "fixit",
  "description": ".. image:: docs/source/_static/logo/logo.svg\n   :width: 600 px\n   :alt: Fixit\n\n|readthedocs-badge| |codecov-badge| |pypi-badge| |pypi-download|\n\n.. |readthedocs-badge| image:: https://readthedocs.org/projects/pip/badge/?version=latest&style=flat\n   :target: https://fixit.readthedocs.io/en/latest/\n   :alt: Documentation\n\n.. |codecov-badge| image:: https://codecov.io/gh/Instagram/Fixit/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/Instagram/Fixit/branch/master\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/fixit.svg\n   :target: https://pypi.org/project/fixit\n   :alt: PYPI\n\n.. |pypi-download| image:: https://pepy.tech/badge/fixit/month\n   :target: https://pepy.tech/project/fixit/month\n   :alt: PYPI Download\n\n.. intro-start\n\n:title:`A lint framework that writes better Python code for you.`\n\nFixit is a lint framework that complements `Flake8 <https://github.com/PyCQA/flake8>`_.\nIt\u2019s based on `LibCST <https://github.com/Instagram/LibCST/>`_ which makes it possible\nto provide **auto-fixes**.\nLint rules are made easy to build through pattern matching, a test toolkit,\nand utility helpers (e.g. scope analysis) for non-trivial boilerplate.\nIt is optimized for efficiency, easy to customize and comes with many builtin lint rules.\n\n.. intro-end\n\nGetting Started\n---------------\n\nTo install Fixit::\n\n  pip install fixit\n\nFixit provides CLI commands.\nTo run built-in Fixit rules on existing code to get code quality suggestions::\n\n  python -m fixit.cli.run_rules\n\nTo apply autofix on existing code::\n\n  python -m fixit.cli.apply_fix\n\nYou can learn more about how to `configure Fixit <https://fixit.readthedocs.io/en/latest/getting_started.html#Configuration-File>`_,\n`build a lint rule <https://fixit.readthedocs.io/en/latest/build_a_lint_rule.html>`_,\n`test a lint rule <https://fixit.readthedocs.io/en/latest/test_a_lint_rule.html>`_ from our tutorials.\nTry it out with our `notebook examples <https://fixit.readthedocs.io/en/latest/getting_started.html>`_.\n\nFurther Reading\n---------------\n- `Static Analysis at Scale: An Instagram Story. <https://instagram-engineering.com/static-analysis-at-scale-an-instagram-story-8f498ab71a0c>`_\n\nDevelopment\n-----------\n\nStart by setting up and activating a virtualenv:\n\n.. code-block:: shell\n\n    git clone git@github.com:Instagram/Fixit.git fixit\n    cd fixit\n    python3 -m venv ../fixit-env/  # just an example, put this wherever you want\n    source ../fixit-env/bin/activate\n    pip install --upgrade pip  # optional, if you have an old system version of pip\n    pip install -r requirements.txt -r requirements-dev.txt\n    # If you're done with the virtualenv, you can leave it by running:\n    deactivate\n\nWe use `isort <https://isort.readthedocs.io/en/stable/>`_ and `black <https://black.readthedocs.io/en/stable/>`_\nto format code. To format changes to be conformant, run the following in the root:\n\n.. code-block:: shell\n\n    tox -e autofix\n\nTo run all tests, you'll need to install `tox <https://tox.readthedocs.io/en/latest/>`_\nand do the following in the root: (use py37, py38 to choose from Python version 3.7 or 3.8)::\n\n    tox -e py38\n\nYou can also run individual unit tests by specifying a module like\nthis::\n\n    tox -e py38 -- fixit.common.tests.test_report\n\nTo run all test cases of a specific rule (e.g. ``NoInheritFromObjectRule``)::\n\n    tox -e py38 -- fixit.tests.NoInheritFromObjectRule\n\nSee the `unittest documentation <https://docs.python.org/3/library/unittest.html>`_\nfor more examples of how to run tests.\n\nWe use `Pyre <https://github.com/facebook/pyre-check>`_ for type-checking. To\nverify types for the library, do the following in the root::\n\n    pyre --preserve-pythonpath check\n\nTo generate documentation, do the following in the root:\n\n.. code-block:: shell\n\n    tox -e docs\n\n\nLicense\n=======\n\nFixit is `MIT licensed <LICENSE>`_, as found in the LICENSE file.\n\n.. fb-docs-start\n\nPrivacy Policy and Terms of Use\n===============================\n\n- `Privacy Policy <https://opensource.facebook.com/legal/privacy>`_\n- `Terms of Use <https://opensource.facebook.com/legal/terms>`_\n\n.. fb-docs-end\n\n\n",
  "requires_dist": [
    "flake8 (>=3.8.1)",
    "libcst (>=0.3.10)",
    "pyyaml (>=5.2)",
    "black (>=19.10b0) ; extra == 'dev'",
    "codecov (>=2.0.15) ; extra == 'dev'",
    "coverage (>=4.5.4) ; extra == 'dev'",
    "isort (>=4.3.20) ; extra == 'dev'",
    "jupyter (>=1.0.0) ; extra == 'dev'",
    "nbsphinx (>=0.7.1) ; extra == 'dev'",
    "pyre-check (==0.0.41) ; extra == 'dev'",
    "sphinx-rtd-theme (>=0.5.0) ; extra == 'dev'",
    "prompt-toolkit (>=2.0.9) ; extra == 'dev'",
    "tox (>=3.14.5) ; extra == 'dev'",
    "diff-cover (>=3.0.1) ; extra == 'dev'"
  ],
  "requires_python": ">=3.6",
  "current_version": "0.1.3",
  "released_versions": [
    "0.0.0",
    "0.1.0",
    "0.1.1",
    "0.1.2",
    "0.1.3"
  ]
}
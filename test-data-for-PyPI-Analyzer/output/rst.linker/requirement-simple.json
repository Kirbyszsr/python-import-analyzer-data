{
  "name": "rst.linker",
  "description": ".. image:: https://img.shields.io/pypi/v/rst.linker.svg\n   :target: `PyPI link`_\n\n.. image:: https://img.shields.io/pypi/pyversions/rst.linker.svg\n   :target: `PyPI link`_\n\n.. _PyPI link: https://pypi.org/project/rst.linker\n\n.. image:: https://github.com/jaraco/rst.linker/workflows/tests/badge.svg\n   :target: https://github.com/jaraco/rst.linker/actions?query=workflow%3A%22tests%22\n   :alt: tests\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: Black\n\n.. .. image:: https://img.shields.io/appveyor/ci/jaraco/rst-linker/master.svg\n..    :target: https://ci.appveyor.com/project/jaraco/rst-linker/branch/master\n\n.. image:: https://readthedocs.org/projects/rstlinker/badge/?version=latest\n   :target: https://rstlinker.readthedocs.io/en/latest/?badge=latest\n\n\n``rst.linker`` provides a routine for adding links and performing\nother custom replacements to reStructuredText files as a Sphinx\nextension.\n\nUsage\n=====\n\nIn your sphinx ``conf`` file, include ``rst.linker`` as an extension\nand then add a ``link_files`` configuration section describing\nthe substitutions to make. For an example, see `rst.linker's own\nconf.py\n<https://github.com/jaraco/rst.linker/blob/master/docs/conf.py>`_\nor read the source to learn more about the the linkers provided.\n\n\n",
  "requires_dist": [
    "python-dateutil",
    "importlib-metadata ; python_version < \"3.8\"",
    "sphinx ; extra == 'docs'",
    "jaraco.packaging (>=8.2) ; extra == 'docs'",
    "rst.linker (>=1.9) ; extra == 'docs'",
    "pytest (>=4.6) ; extra == 'testing'",
    "pytest-checkdocs (>=2.4) ; extra == 'testing'",
    "pytest-flake8 ; extra == 'testing'",
    "pytest-cov ; extra == 'testing'",
    "pytest-enabler (>=1.0.1) ; extra == 'testing'",
    "path.py ; extra == 'testing'",
    "pytest-black (>=0.3.7) ; (platform_python_implementation != \"PyPy\" and python_version < \"3.10\") and extra == 'testing'",
    "pytest-mypy ; (platform_python_implementation != \"PyPy\" and python_version < \"3.10\") and extra == 'testing'"
  ],
  "requires_python": ">=3.6",
  "current_version": "2.2.0",
  "released_versions": [
    "1.0",
    "1.1",
    "1.10",
    "1.11",
    "1.3",
    "1.3.1",
    "1.3.2",
    "1.4",
    "1.4.1",
    "1.4.2",
    "1.5",
    "1.6",
    "1.6.1",
    "1.6.2",
    "1.7",
    "1.8",
    "1.8.1",
    "1.8.2",
    "1.9",
    "2.0.0",
    "2.1.0",
    "2.1.1",
    "2.2.0"
  ]
}
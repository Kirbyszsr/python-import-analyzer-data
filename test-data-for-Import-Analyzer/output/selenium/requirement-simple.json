{
  "name": "selenium",
  "description": "======================\nSelenium Client Driver\n======================\n\nIntroduction\n============\n\nPython language bindings for Selenium WebDriver.\n\nThe `selenium` package is used to automate web browser interaction from Python.\n\n+-----------+--------------------------------------------------------------------------------------+\n| **Home**: | http://www.seleniumhq.org                                                            |\n+-----------+--------------------------------------------------------------------------------------+\n| **Docs**: | `selenium package API <https://seleniumhq.github.io/selenium/docs/api/py/api.html>`_ |\n+-----------+--------------------------------------------------------------------------------------+\n| **Dev**:  | https://github.com/SeleniumHQ/Selenium                                               |\n+-----------+--------------------------------------------------------------------------------------+\n| **PyPI**: | https://pypi.org/project/selenium/                                                   |\n+-----------+--------------------------------------------------------------------------------------+\n| **IRC**:  | **#selenium** channel on freenode                                                    |\n+-----------+--------------------------------------------------------------------------------------+\n\nSeveral browsers/drivers are supported (Firefox, Chrome, Internet Explorer), as well as the Remote protocol.\n\nSupported Python Versions\n=========================\n\n* Python 2.7, 3.4+\n\nInstalling\n==========\n\nIf you have `pip <https://pip.pypa.io/>`_ on your system, you can simply install or upgrade the Python bindings::\n\n    pip install -U selenium\n\nAlternately, you can download the source distribution from `PyPI <https://pypi.org/project/selenium/#files>`_ (e.g. selenium-3.141.0.tar.gz), unarchive it, and run::\n\n    python setup.py install\n\nNote: You may want to consider using `virtualenv <http://www.virtualenv.org/>`_ to create isolated Python environments.\n\nDrivers\n=======\n\nSelenium requires a driver to interface with the chosen browser. Firefox,\nfor example, requires `geckodriver <https://github.com/mozilla/geckodriver/releases>`_, which needs to be installed before the below examples can be run. Make sure it's in your `PATH`, e. g., place it in `/usr/bin` or `/usr/local/bin`.\n\nFailure to observe this step will give you an error `selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable needs to be in PATH.`\n\nOther supported browsers will have their own drivers available. Links to some of the more popular browser drivers follow.\n\n+--------------+-----------------------------------------------------------------------+\n| **Chrome**:  | https://sites.google.com/a/chromium.org/chromedriver/downloads        |\n+--------------+-----------------------------------------------------------------------+\n| **Edge**:    | https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/ |\n+--------------+-----------------------------------------------------------------------+\n| **Firefox**: | https://github.com/mozilla/geckodriver/releases                       |\n+--------------+-----------------------------------------------------------------------+\n| **Safari**:  | https://webkit.org/blog/6900/webdriver-support-in-safari-10/          |\n+--------------+-----------------------------------------------------------------------+\n\nExample 0:\n==========\n\n* open a new Firefox browser\n* load the page at the given URL\n\n.. code-block:: python\n\n    from selenium import webdriver\n\n    browser = webdriver.Firefox()\n    browser.get('http://seleniumhq.org/')\n\nExample 1:\n==========\n\n* open a new Firefox browser\n* load the Yahoo homepage\n* search for \"seleniumhq\"\n* close the browser\n\n.. code-block:: python\n\n    from selenium import webdriver\n    from selenium.webdriver.common.keys import Keys\n\n    browser = webdriver.Firefox()\n\n    browser.get('http://www.yahoo.com')\n    assert 'Yahoo' in browser.title\n\n    elem = browser.find_element_by_name('p')  # Find the search box\n    elem.send_keys('seleniumhq' + Keys.RETURN)\n\n    browser.quit()\n\nExample 2:\n==========\n\nSelenium WebDriver is often used as a basis for testing web applications.  Here is a simple example using Python's standard `unittest <http://docs.python.org/3/library/unittest.html>`_ library:\n\n.. code-block:: python\n\n    import unittest\n    from selenium import webdriver\n\n    class GoogleTestCase(unittest.TestCase):\n\n        def setUp(self):\n            self.browser = webdriver.Firefox()\n            self.addCleanup(self.browser.quit)\n\n        def testPageTitle(self):\n            self.browser.get('http://www.google.com')\n            self.assertIn('Google', self.browser.title)\n\n    if __name__ == '__main__':\n        unittest.main(verbosity=2)\n\nSelenium Server (optional)\n==========================\n\nFor normal WebDriver scripts (non-Remote), the Java server is not needed.\n\nHowever, to use Selenium Webdriver Remote or the legacy Selenium API (Selenium-RC), you need to also run the Selenium server.  The server requires a Java Runtime Environment (JRE).\n\nDownload the server separately, from: http://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.0.jar\n\nRun the server from the command line::\n\n    java -jar selenium-server-standalone-3.141.0.jar\n\nThen run your Python client scripts.\n\nUse The Source Luke!\n====================\n\nView source code online:\n\n+-----------+-------------------------------------------------------+\n| official: | https://github.com/SeleniumHQ/selenium/tree/master/py |\n+-----------+-------------------------------------------------------+\n",
  "requires_dist": null,
  "requires_python": "",
  "current_version": "3.141.0",
  "released_versions": [
    "0.9.2",
    "1.0.1",
    "1.0.3",
    "2.0-dev",
    "2.0-dev-9138",
    "2.0-dev-9212",
    "2.0-dev-9231",
    "2.0-dev-9284",
    "2.0-dev-9306",
    "2.0-dev-9307",
    "2.0-dev-9310",
    "2.0-dev-9338",
    "2.0-dev-9340",
    "2.0-dev-9341",
    "2.0-dev-9429",
    "2.0.0",
    "2.0.1",
    "2.0a5",
    "2.0b2",
    "2.0b3",
    "2.0b3dev",
    "2.0b4dev",
    "2.0dev1",
    "2.0dev2",
    "2.0dev3",
    "2.0dev4",
    "2.0dev5",
    "2.0dev6",
    "2.0rc1",
    "2.0rc2",
    "2.0rc3",
    "2.1.0",
    "2.10.0",
    "2.11.0",
    "2.11.1",
    "2.12.0",
    "2.12.1",
    "2.13.0",
    "2.13.1",
    "2.14.0",
    "2.15.0",
    "2.16.0",
    "2.17.0",
    "2.18.1",
    "2.19.0",
    "2.19.1",
    "2.2.0",
    "2.20.0",
    "2.21.0",
    "2.21.1",
    "2.21.2",
    "2.21.3",
    "2.22.0",
    "2.22.1",
    "2.23.0",
    "2.24.0",
    "2.25.0",
    "2.26.0",
    "2.27.0",
    "2.28.0",
    "2.29.0",
    "2.3.0",
    "2.30.0",
    "2.31.0",
    "2.32.0",
    "2.33.0",
    "2.34.0",
    "2.35.0",
    "2.36.0",
    "2.37.0",
    "2.37.1",
    "2.37.2",
    "2.38.0",
    "2.38.1",
    "2.38.2",
    "2.38.3",
    "2.38.4",
    "2.39.0",
    "2.4.0",
    "2.40.0",
    "2.41.0",
    "2.42.0",
    "2.42.1",
    "2.43.0",
    "2.44.0",
    "2.45.0",
    "2.46.0",
    "2.46.1",
    "2.47.0",
    "2.47.1",
    "2.47.2",
    "2.47.3",
    "2.48.0",
    "2.49.0",
    "2.49.1",
    "2.49.2",
    "2.5.0",
    "2.50.0",
    "2.50.1",
    "2.51.0",
    "2.51.1",
    "2.52.0",
    "2.53.0",
    "2.53.1",
    "2.53.2",
    "2.53.3",
    "2.53.4",
    "2.53.5",
    "2.53.6",
    "2.6.0",
    "2.7.0",
    "2.8.0",
    "2.8.1",
    "2.9.0",
    "3.0.0",
    "3.0.0b1",
    "3.0.0b2",
    "3.0.0b3",
    "3.0.1",
    "3.0.2",
    "3.10.0",
    "3.11.0",
    "3.12.0",
    "3.13.0",
    "3.14.0",
    "3.14.1",
    "3.141.0",
    "3.3.0",
    "3.3.1",
    "3.3.2",
    "3.3.3",
    "3.4.0",
    "3.4.1",
    "3.4.2",
    "3.4.3",
    "3.5.0",
    "3.6.0",
    "3.7.0",
    "3.8.0",
    "3.8.1",
    "3.9.0",
    "4.0.0.a7",
    "4.0.0.b1",
    "4.0.0.b2",
    "4.0.0.b2.post1",
    "4.0.0.b3",
    "4.0.0a1",
    "4.0.0a3",
    "4.0.0a5",
    "4.0.0a6",
    "4.0.0a6.post1",
    "4.0.0a6.post2"
  ]
}
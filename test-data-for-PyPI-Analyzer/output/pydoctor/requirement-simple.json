{
  "name": "pydoctor",
  "description": "pydoctor\n--------\n\n.. image:: https://travis-ci.org/twisted/pydoctor.svg?branch=tox-travis-2\n  :target: https://travis-ci.org/twisted/pydoctor\n\n.. image:: https://codecov.io/gh/twisted/pydoctor/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/twisted/pydoctor\n\n.. image:: https://img.shields.io/badge/-documentation-blue\n  :target: https://pydoctor.readthedocs.io/\n\nThis is *pydoctor*, an API documentation generator that works by\nstatic analysis.\n\nIt was written primarily to replace ``epydoc`` for the purposes of the\nTwisted project as ``epydoc`` has difficulties with ``zope.interface``.\nIf you are looking for a successor to ``epydoc`` after moving to Python 3,\n``pydoctor`` might be the right tool for your project as well.\n\n``pydoctor`` puts a fair bit of effort into resolving imports and\ncomputing inheritance hierarchies and, as it aims at documenting\nTwisted, knows about ``zope.interface``'s declaration API and can present\ninformation about which classes implement which interface, and vice\nversa.\n\n.. contents:: Contents:\n\n\nSimple Usage\n~~~~~~~~~~~~\n\nYou can run pydoctor on your project like this::\n\n    $ pydoctor --make-html --html-output=docs/api src/mylib\n\nFor more info, `Read The Docs <https://pydoctor.readthedocs.io/>`_.\n\nMarkup\n~~~~~~\n\npydoctor currently supports the following markup languages in docstrings:\n\n`epytext`__ (default)\n    The markup language of epydoc.\n    Simple and compact.\n\n`restructuredtext`__\n    The markup language used by Sphinx.\n    More expressive than epytext, but also slightly more complex and verbose.\n\n``plaintext``\n    Text without any markup.\n\n__ http://epydoc.sourceforge.net/manual-epytext.html\n__ https://docutils.sourceforge.io/rst.html\n\nYou can select a different format using the ``--docformat`` option.\n\nWhat's New?\n~~~~~~~~~~~\n\npydoctor 21.2.2\n^^^^^^^^^^^^^^^\n\n* Fix positioning of anchors, such that following a link to a member of a module or class will scroll its documentation to a visible spot at the top of the page.\n\npydoctor 21.2.1\n^^^^^^^^^^^^^^^\n\n* Fix presentation of the project name and URL in the navigation bars, such that it works as expected on all generated HTML pages.\n\npydoctor 21.2.0\n^^^^^^^^^^^^^^^\n\n* Removed the ``--html-write-function-pages`` option. As a replacement, you can use the generated Intersphinx inventory (``objects.inv``) for deep-linking your documentation.\n* Fixed project version in the generated Intersphinx inventory. This used to be hardcoded to 2.0 (we mistook it for a format version), now it is unversioned by default and a version can be specified using the new ``--project-version`` option.\n* Fixed multiple bugs in Python name resolution, which could lead to for example missing \"implemented by\" links.\n* Fixed bug where class docstring fields such as ``cvar`` and ``ivar`` are ignored when they override inherited attribute docstrings.\n* Property decorators containing one or more dots (such as ``@abc.abstractproperty``) are now recognized by the custom properties support.\n* Improvements to `attrs`__ support:\n\n  - Attributes are now marked as instance variables.\n  - Type comments are given precedence over types inferred from ``attr.ib``.\n  - Support positional arguments in ``attr.ib`` definitions. Please use keyword arguments instead though, both for clarity and to be compatible with future ``attrs`` releases.\n\n* Improvements in the treatment of the ``__all__`` module variable:\n\n  - Assigning an empty sequence is interpreted as exporting nothing instead of being ignored.\n  - Better error reporting when the value assigned is either invalid or pydoctor cannot make sense of it.\n\n* Added ``except`` field as a synonym of ``raises``, to be compatible with epydoc and to fix handling of the ``:Exceptions:`` consolidated field in reStructuredText.\n* Exception types and external base classes are hyperlinked to their class documentation.\n* Formatting of ``def func():`` and ``class Class:`` lines was made consistent with code blocks.\n* Changes to the \"Show/hide Private API\" button:\n\n  - The button was moved to the right hand side of the navigation bar, to avoid overlapping the content on narrow displays.\n  - The show/hide state is now synced with a query argument in the location bar. This way, if you bookmark the page or send a link to someone else, the show/hide state will be preserved.\n  - A deep link to a private API item will now automatically enable \"show private API\" mode.\n\n* Improvements to the ``build_apidocs`` Sphinx extension:\n\n  - API docs are now built before Sphinx docs, such that the rest of the documentation can link to it via Intersphinx.\n  - New configuration variable ``pydoctor_url_path`` that will automatically update the ``intersphinx_mapping`` variable so that it uses the latest API inventory.\n  - The extension can be configured to build API docs for more than one package.\n\n* ``pydoctor.__version__`` is now a plain ``str`` instead of an ``incremental.Version`` object.\n\n__ https://www.attrs.org/\n\npydoctor 20.12.1\n^^^^^^^^^^^^^^^^\n\n* Reject source directories outside the project base directory (if given), instead of crashing.\n* Fixed bug where source directories containing symbolic links could appear to be outside of the project base directory, leading to a crash.\n* Bring back source link on package pages.\n\npydoctor 20.12.0\n^^^^^^^^^^^^^^^^\n\n* Python 3.6 or higher is required.\n\n* There is now a user manual that can be built with Sphinx or read online on `Read the Docs`__. This is a work in progress and the online version will be updated between releases.\n\n* Added support for Python language features:\n\n  - Type annotations of function parameters and return value are used when the docstring does not document a type.\n  - Functions decorated with ``@property`` or any other decorator with a name ending in \"property\" are now formatted similar to variables.\n  - Coroutine functions (``async def``) are included in the output.\n  - Keyword-only and position-only parameters are included in the output.\n\n* Output improvements:\n\n  - Type names in annotations are hyperlinked to the corresponding documentation.\n  - Styling changes to make the generated documentation easier to read and navigate.\n  - Private API is now hidden by default on the Module Index, Class Hierarchy and Index of Names pages.\n  - The pydoctor version is included in the \"generated by\" line in the footer.\n\n* All parents of the HTML output directory are now created by pydoctor; previously it would create only the deepest directory.\n\n* The ``--add-package`` and ``--add-module`` options have been deprecated; pass the source paths as positional arguments instead.\n\n* New option ``-W``/``--warnings-as-errors`` to fail your build on documentation errors.\n\n* Linking to the standard library documentation is more accurate now, but does require the use of an Intersphinx inventory (``--intersphinx=https://docs.python.org/3/objects.inv``).\n\n* Caching of Intersphinx inventories is now enabled by default.\n\n* Added a `Sphinx extension`__ for embedding pydoctor's output in a project's Sphinx documentation.\n\n* Added an extra named ``rst`` for the dependencies needed to process reStructuredText (``pip install -U pydoctor[rst]``).\n\n* Improved error reporting:\n\n  - More accurate source locations (file + line number) in error messages.\n  - Warnings were added for common mistakes when documenting parameters.\n  - Clearer error message when a link target is not found.\n\n* Increased reliability:\n\n  - Fixed crash when analyzing ``from package import *``.\n  - Fixed crash when the line number for a docstring error is unknown.\n  - Better unit test coverage, more system tests, started adding type annotations to the code.\n  - Unit tests are also run on Windows.\n\n__ https://pydoctor.readthedocs.io/\n__ https://pydoctor.readthedocs.io/en/latest/usage.html#building-pydoctor-together-with-sphinx-html-build\n\npydoctor 20.7.2\n^^^^^^^^^^^^^^^\n\n* Fix handling of external links in reStructuredText under Python 3.\n* Fix reporting of errors in reStructuredText under Python 3.\n* Restore syntax highlighting of Python code blocks.\n\npydoctor 20.7.1\n^^^^^^^^^^^^^^^\n\n* Fix cross-reference links to builtin types in standard library.\n* Fix and improve error message printed for unknown fields.\n\npydoctor 20.7.0\n^^^^^^^^^^^^^^^\n\n* Python 3 support.\n* Type annotations on attributes are supported when running on Python 3.\n* Type comments on attributes are supported when running on Python 3.8+.\n* Type annotations on function definitions are not supported yet.\n* Undocumented attributes are now included in the output.\n* Attribute docstrings: a module, class or instance variable can be documented by a following it up with a docstring.\n* Improved error reporting: more errors are reported, error messages include file name and line number.\n* Dropped support for implicit relative imports.\n* Explicit relative imports (using ``from``) no longer cause warnings.\n* Dropped support for index terms in epytext (``X{}``). This was never supported in any meaningful capacity, but now the tag is gone.\n\nThis was the last major release to support Python 2.7 and 3.5.\n\n\n\n",
  "requires_dist": [
    "appdirs",
    "CacheControl[filecache]",
    "Twisted",
    "requests",
    "astor",
    "attrs",
    "importlib-metadata ; python_version < \"3.8\"",
    "Sphinx ; extra == 'docs'",
    "sphinx-rtd-theme ; extra == 'docs'",
    "sphinxcontrib-spelling ; extra == 'docs'",
    "docutils ; extra == 'rst'"
  ],
  "requires_python": ">=3.6",
  "current_version": "21.2.2",
  "released_versions": [
    "0.4",
    "0.4a1",
    "0.5",
    "0.5b1",
    "0.5b2",
    "0.6b1",
    "0.6b2",
    "15.0.0",
    "15.1.0",
    "16.0.0",
    "16.1.0",
    "16.1.1",
    "16.2.0",
    "16.2.1",
    "16.3.0",
    "19.11.0",
    "20.12.0",
    "20.12.1",
    "20.7.0",
    "20.7.1",
    "20.7.2",
    "21.2.0",
    "21.2.1",
    "21.2.2"
  ]
}
{
  "name": "m2r",
  "description": "\nM2R\n===\n\n\n.. image:: https://img.shields.io/pypi/v/m2r.svg\n   :target: https://pypi.python.org/pypi/m2r\n   :alt: PyPI\n\n\n.. image:: https://img.shields.io/pypi/pyversions/m2r.svg\n   :target: https://pypi.python.org/pypi/m2r\n   :alt: PyPI version\n\n\n.. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg\n   :target: https://miyakogi.github.io/m2r\n   :alt: Documentation\n\n\n.. image:: https://travis-ci.org/miyakogi/m2r.svg?branch=master\n   :target: https://travis-ci.org/miyakogi/m2r\n   :alt: Build Status\n\n\n.. image:: https://codecov.io/gh/miyakogi/m2r/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/miyakogi/m2r\n   :alt: codecov\n\n\n----\n\nM2R converts a markdown file including reStructuredText (rst) markups to a valid\nrst format.\n\nWhy another converter?\n----------------------\n\nI wanted to write sphinx document in markdown, since it's widely used now and\neasy to write code blocks and lists. However, converters using pandoc or\nrecommonmark do not support many rst markups and sphinx extensions. For\nexample, rst's reference link like ``see `ref`_`` (this is very convenient in\nlong document in which same link appears multiple times) will be converted to\na code block in HTML like ``see <code>ref</code>_``\\ , which is not expected.\n\nFeatures\n--------\n\n\n* Basic markdown and some extensions (see below)\n\n  * inline/block-level raw html\n  * fenced-code block\n  * tables\n  * footnotes (\\ ``[^1]``\\ )\n\n* Inline- and Block-level rst markups\n\n  * single- and multi-line directives (\\ ``.. directive::``\\ )\n  * inline-roles (\\ ``:code:`print(1)` ...``\\ )\n  * ref-link (\\ ``see `ref`_``\\ )\n  * footnotes (\\ ``[#fn]_``\\ )\n  * math extension inspired by `recommonmark <https://recommonmark.readthedocs.io/en/latest/index.html>`_\n\n* Sphinx extension\n\n  * add markdown support for sphinx\n  * ``mdinclude`` directive to include markdown from md or rst files\n  * option to parse relative links into ref and doc directives (\\ ``m2r_parse_relative_links``\\ )\n\n* Pure python implementation\n\n  * pandoc is not required\n\nInstallation\n------------\n\nPython 2.7 or Python 3.4+ is required.\n\n.. code-block::\n\n   pip install m2r\n\nOr,\n\n.. code-block::\n\n   python3 -m pip install m2r\n\nUsage\n-----\n\nCommand Line\n^^^^^^^^^^^^\n\n``m2r`` command converts markdown file to rst format.\n\n.. code-block::\n\n   m2r your_document.md [your_document2.md ...]\n\nThen you will find ``your_document.rst`` in the same directory.\n\nProgrammatic Use\n^^^^^^^^^^^^^^^^\n\nImport ``m2r.convert`` function and call it with markdown text.\nThen it will return converted text.\n\n.. code-block:: python\n\n   from m2r import convert\n   rst = convert('# Title\\n\\nSentence.')\n   print(rst)\n   # Title\n   # =====\n   #\n   # Sentence.\n\nOr, use ``parse_from_file`` function to load markdown file and obtain converted\ntext.\n\n.. code-block:: python\n\n   from m2r import parse_from_file\n   output = parse_from_file('markdown_file.md')\n\nThis is an example of setup.py to write README in markdown, and publish it to\nPyPI as rst format.\n\n.. code-block:: python\n\n   readme_file = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'README.md')\n   try:\n       from m2r import parse_from_file\n       readme = parse_from_file(readme_file)\n   except ImportError:\n       # m2r may not be installed in user environment\n       with open(readme_file) as f:\n           readme = f.read()\n   setup(\n       ...,\n       long_description=readme,\n       ...,\n   )\n\nSphinx Integration\n^^^^^^^^^^^^^^^^^^\n\nIn your conf.py, add the following lines.\n\n.. code-block:: python\n\n   extensions = [\n       ...,\n       'm2r',\n   ]\n\n   # source_suffix = '.rst'\n   source_suffix = ['.rst', '.md']\n\nWrite index.md and run ``make html``.\n\nWhen ``m2r`` extension is enabled on sphinx and ``.md`` file is loaded, m2r\nconverts to rst and pass to sphinx, not making new ``.rst`` file.\n\nmdinclude directive\n~~~~~~~~~~~~~~~~~~~\n\nLike ``.. include:: file`` directive, ``.. mdinclude:: file`` directive inserts\nmarkdown file at the line.\n\nNote: do not use ``.. include:: file`` directive to include markdown file even if\nin the markdown file, please use ``.. mdinclude:: file`` instead.\n\nRestrictions\n------------\n\n\n* In the rst's directives, markdown is not available. Please write in rst.\n* Column alignment of tables is not supported. (rst does not support this feature)\n* Heading with overline-and-underline is not supported.\n\n  * Heading with underline is OK\n\n* Rst heading marks are currently hard-coded and unchangeable.\n\n  * H1: ``=``\\ , H2: ``-``\\ , H3: ``^``\\ , H4: ``~``\\ , H5: ``\"``\\ , H6: ``#``\n\nIf you find any bug or unexpected behaviour, please report it to\n`Issues <https://github.com/miyakogi/m2r/issues>`_.\n\nExample\n-------\n\nSee `example document <https://miyakogi.github.io/m2r/example.html>`_ and `its\nsource code <https://github.com/miyakogi/m2r/blob/master/docs/example.md>`_.\n\nI'm using m2r for writing user guide of `WDOM <https://github.com/miyakogi/wdom>`_.\nSo you can see it as another example. Its `HTML is\nhere <http://wdom-py.readthedocs.io/en/latest/guide/index.html>`_\\ , and `its\nsource code is here <https://github.com/miyakogi/wdom/tree/dev/docs/guide>`_.\n\nDemo editor\n^^^^^^^^^^^\n\nDemo editor of m2r is available.\nIf you are interested in m2r, please try it.\n\n`https://github.com/miyakogi/m2rdemo <https://github.com/miyakogi/m2rdemo>`_\n\nAcknowledgement\n---------------\n\nm2r is written as an extension of\n`mistune <http://mistune.readthedocs.io/en/latest/>`_\\ , which is highly extensible\npure-python markdown parser.\nWithout the mistune, I couldn't write this. Thank you!\n\nLicence\n-------\n\n`MIT <https://github.com/miyakogi/m2r/blob/master/LICENSE>`_\n",
  "requires_dist": null,
  "requires_python": "",
  "current_version": "0.2.1",
  "released_versions": [
    "0.1.0",
    "0.1.1",
    "0.1.10",
    "0.1.11",
    "0.1.12",
    "0.1.13",
    "0.1.14",
    "0.1.15",
    "0.1.2",
    "0.1.3",
    "0.1.4",
    "0.1.5",
    "0.1.6",
    "0.1.7",
    "0.1.8",
    "0.1.9",
    "0.2.0",
    "0.2.1"
  ]
}
[
  {
    "cveID": "CVE-2021-24315",
    "cveASSIGNER": "contact@wpscan.com",
    "publishedDate": "2021-05-17T17:15Z",
    "lastModifiedDate": "2021-05-24T18:48Z",
    "description": [
      {
        "lang": "en",
        "value": "The GiveWP \u00e2\u20ac\u201c Donation Plugin and Fundraising Platform WordPress plugin before 2.10.4 did not sanitise or escape the Background Image field of its Stripe Checkout Setting and Logo field in its Email settings, leading to authenticated (admin+) Stored XSS issues."
      }
    ],
    "references": [
      {
        "url": "https://m0ze.ru/vulnerability/%5B2021-04-02%5D-%5BWordPress%5D-%5BCWE-79%5D-GiveWP-WordPress-Plugin-v2.10.3.txt",
        "name": "https://m0ze.ru/vulnerability/%5B2021-04-02%5D-%5BWordPress%5D-%5BCWE-79%5D-GiveWP-WordPress-Plugin-v2.10.3.txt",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://wpscan.com/vulnerability/006b37c9-641c-4676-a315-9b6053e001d2",
        "name": "https://wpscan.com/vulnerability/006b37c9-641c-4676-a315-9b6053e001d2",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-32624",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-24T17:15Z",
    "lastModifiedDate": "2021-05-24T17:15Z",
    "description": [
      {
        "lang": "en",
        "value": "Keystone 5 is an open source CMS platform to build Node.js applications. This security advisory relates to a newly discovered capability in our query infrastructure to directly or indirectly expose the values of private fields, bypassing the configured access control. This is an access control related oracle attack in that the attack method guides an attacker during their attempt to reveal information they do not have access to. The complexity of completing the attack is limited by some length-dependent behaviors and the fidelity of the exposed information. Under some circumstances, field values or field value meta data can be determined, despite the field or list having `read` access control configured. If you use private fields or lists, you may be impacted. No patches exist at this time. There are no workarounds at this time"
      }
    ],
    "references": [
      {
        "url": "https://github.com/keystonejs/keystone-5/security/advisories/GHSA-27g8-r9vw-765x",
        "name": "https://github.com/keystonejs/keystone-5/security/advisories/GHSA-27g8-r9vw-765x",
        "refsource": "CONFIRM",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2021-33500",
    "cveASSIGNER": "cve@mitre.org",
    "publishedDate": "2021-05-21T20:15Z",
    "lastModifiedDate": "2021-05-21T20:15Z",
    "description": [
      {
        "lang": "en",
        "value": "PuTTY before 0.75 on Windows allows remote servers to cause a denial of service (Windows GUI hang) by telling the PuTTY window to change its title repeatedly at high speed, which results in many SetWindowTextA or SetWindowTextW calls. NOTE: the same attack methodology may affect some OS-level GUIs on Linux or other platforms for similar reasons."
      }
    ],
    "references": [
      {
        "url": "https://docs.ssh-mitm.at/puttydos.html",
        "name": "https://docs.ssh-mitm.at/puttydos.html",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
        "name": "https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "https://github.com/ssh-mitm/ssh-mitm-plugins/blob/main/ssh_mitm_plugins/ssh/putty_dos.py",
        "name": "https://github.com/ssh-mitm/ssh-mitm-plugins/blob/main/ssh_mitm_plugins/ssh/putty_dos.py",
        "refsource": "MISC",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2020-29134",
    "cveASSIGNER": "cve@mitre.org",
    "publishedDate": "2021-03-05T16:15Z",
    "lastModifiedDate": "2021-05-21T20:15Z",
    "description": [
      {
        "lang": "en",
        "value": "The TOTVS Fluig platform allows path traversal through the parameter \"file = .. /\" encoded in base64. This affects all versions Fluig Lake 1.7.0, Fluig 1.6.5 and Fluig 1.6.4"
      }
    ],
    "references": [
      {
        "url": "https://github.com/lucxssouza/CVE-2020-29134",
        "name": "https://github.com/lucxssouza/CVE-2020-29134",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://www.exploit-db.com/exploits/49622",
        "name": "https://www.exploit-db.com/exploits/49622",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "https://github.com/lucxssouza/CVE-2020-29134/blob/main/README.md",
        "name": "https://github.com/lucxssouza/CVE-2020-29134/blob/main/README.md",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://systemweakness.com/cve-2020-29134-totvs-fluig-platform-f298ea84b507",
        "name": "https://systemweakness.com/cve-2020-29134-totvs-fluig-platform-f298ea84b507",
        "refsource": "MISC",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2021-29553",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-21T18:48Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can read data outside of bounds of heap allocated buffer in `tf.raw_ops.QuantizeAndDequantizeV3`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/11ff7f80667e6490d7b5174aa6bf5e01886e770f/tensorflow/core/kernels/quantize_and_dequantize_op.cc#L237) does not validate the value of user supplied `axis` attribute before using it to index in the array backing the `input` argument. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/99085e8ff02c3763a0ec2263e44daec416f6a387",
        "name": "https://github.com/tensorflow/tensorflow/commit/99085e8ff02c3763a0ec2263e44daec416f6a387",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h9px-9vqg-222h",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h9px-9vqg-222h",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-21551",
    "cveASSIGNER": "secure@dell.com",
    "publishedDate": "2021-05-04T16:15Z",
    "lastModifiedDate": "2021-05-21T18:15Z",
    "description": [
      {
        "lang": "en",
        "value": "Dell dbutil_2_3.sys driver contains an insufficient access control vulnerability which may lead to escalation of privileges, denial of service, or information disclosure. Local authenticated user access is required."
      }
    ],
    "references": [
      {
        "url": "https://www.dell.com/support/kbdoc/en-us/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability",
        "name": "https://www.dell.com/support/kbdoc/en-us/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability",
        "refsource": "MISC",
        "tags": [
          "Mitigation",
          "Vendor Advisory"
        ]
      },
      {
        "url": "http://packetstormsecurity.com/files/162604/Dell-DBUtil_2_3.sys-IOCTL-Memory-Read-Write.html",
        "name": "http://packetstormsecurity.com/files/162604/Dell-DBUtil_2_3.sys-IOCTL-Memory-Read-Write.html",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "http://packetstormsecurity.com/files/162739/DELL-dbutil_2_3.sys-2.3-Arbitrary-Write-Privilege-Escalation.html",
        "name": "http://packetstormsecurity.com/files/162739/DELL-dbutil_2_3.sys-2.3-Arbitrary-Write-Privilege-Escalation.html",
        "refsource": "MISC",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2021-31475",
    "cveASSIGNER": "zdi-disclosures@trendmicro.com",
    "publishedDate": "2021-05-21T15:15Z",
    "lastModifiedDate": "2021-05-21T15:15Z",
    "description": [
      {
        "lang": "en",
        "value": "This vulnerability allows remote attackers to execute arbitrary code on affected installations of SolarWinds Orion Job Scheduler 2020.2.1 HF 2. Authentication is required to exploit this vulnerability. The specific flaw exists within the JobRouterService WCF service. The issue is due to the WCF service configuration, which allows a critical resource to be accessed by unprivileged users. An attacker can leverage this vulnerability to execute code in the context of an administrator. Was ZDI-CAN-12007."
      }
    ],
    "references": [
      {
        "url": "https://documentation.solarwinds.com/en/success_center/orionplatform/content/release_notes/orion_platform_2020-2-5_release_notes.htm",
        "name": "https://documentation.solarwinds.com/en/success_center/orionplatform/content/release_notes/orion_platform_2020-2-5_release_notes.htm",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "https://www.zerodayinitiative.com/advisories/ZDI-21-605/",
        "name": "https://www.zerodayinitiative.com/advisories/ZDI-21-605/",
        "refsource": "MISC",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2019-19026",
    "cveASSIGNER": "cve@mitre.org",
    "publishedDate": "2020-03-20T03:15Z",
    "lastModifiedDate": "2021-05-21T16:08Z",
    "description": [
      {
        "lang": "en",
        "value": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 allows SQL Injection via project quotas in the VMware Harbor Container Registry for the Pivotal Platform."
      }
    ],
    "references": [
      {
        "url": "https://tanzu.vmware.com/security/cve-2019-19026",
        "name": "https://tanzu.vmware.com/security/cve-2019-19026",
        "refsource": "CONFIRM",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-rh89-vvrg-fg64",
        "name": "https://github.com/goharbor/harbor/security/advisories/GHSA-rh89-vvrg-fg64",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/goharbor/harbor/security/advisories",
        "name": "https://github.com/goharbor/harbor/security/advisories",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2019-19029",
    "cveASSIGNER": "cve@mitre.org",
    "publishedDate": "2020-03-20T03:15Z",
    "lastModifiedDate": "2021-05-21T15:27Z",
    "description": [
      {
        "lang": "en",
        "value": "Cloud Native Computing Foundation Harbor prior to 1.8.6 and 1.9.3 allows SQL Injection via user-groups in the VMware Harbor Container Registry for the Pivotal Platform."
      }
    ],
    "references": [
      {
        "url": "https://github.com/goharbor/harbor/security/advisories/GHSA-qcfv-8v29-469w",
        "name": "https://github.com/goharbor/harbor/security/advisories/GHSA-qcfv-8v29-469w",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/goharbor/harbor/security/advisories",
        "name": "https://github.com/goharbor/harbor/security/advisories",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://tanzu.vmware.com/security/cve-2019-19029",
        "name": "https://tanzu.vmware.com/security/cve-2019-19029",
        "refsource": "CONFIRM",
        "tags": [
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2019-3818",
    "cveASSIGNER": "secalert@redhat.com",
    "publishedDate": "2019-02-05T17:29Z",
    "lastModifiedDate": "2021-05-21T14:42Z",
    "description": [
      {
        "lang": "en",
        "value": "The kube-rbac-proxy container before version 0.4.1 as used in Red Hat OpenShift Container Platform does not honor TLS configurations, allowing for use of insecure ciphers and TLS 1.0. An attacker could target traffic sent over a TLS connection with a weak configuration and potentially break the encryption."
      }
    ],
    "references": [
      {
        "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3818",
        "name": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3818",
        "refsource": "CONFIRM",
        "tags": [
          "Issue Tracking",
          "Patch",
          "Vendor Advisory"
        ]
      },
      {
        "url": "https://access.redhat.com/security/cve/CVE-2019-3818",
        "name": "https://access.redhat.com/security/cve/CVE-2019-3818",
        "refsource": "CONFIRM",
        "tags": [
          "Vendor Advisory"
        ]
      },
      {
        "url": "http://www.securityfocus.com/bid/106744",
        "name": "106744",
        "refsource": "BID",
        "tags": [
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "https://access.redhat.com/errata/RHBA-2019:0327",
        "name": "RHBA-2019:0327",
        "refsource": "REDHAT",
        "tags": [
          "Vendor Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-25216",
    "cveASSIGNER": "security-officer@isc.org",
    "publishedDate": "2021-04-29T01:15Z",
    "lastModifiedDate": "2021-05-21T09:15Z",
    "description": [
      {
        "lang": "en",
        "value": "In BIND 9.5.0 -> 9.11.29, 9.12.0 -> 9.16.13, and versions BIND 9.11.3-S1 -> 9.11.29-S1 and 9.16.8-S1 -> 9.16.13-S1 of BIND Supported Preview Edition, as well as release versions 9.17.0 -> 9.17.1 of the BIND 9.17 development branch, BIND servers are vulnerable if they are running an affected version and are configured to use GSS-TSIG features. In a configuration which uses BIND's default settings the vulnerable code path is not exposed, but a server can be rendered vulnerable by explicitly setting values for the tkey-gssapi-keytab or tkey-gssapi-credential configuration options. Although the default configuration is not vulnerable, GSS-TSIG is frequently used in networks where BIND is integrated with Samba, as well as in mixed-server environments that combine BIND servers with Active Directory domain controllers. For servers that meet these conditions, the ISC SPNEGO implementation is vulnerable to various attacks, depending on the CPU architecture for which BIND was built: For named binaries compiled for 64-bit platforms, this flaw can be used to trigger a buffer over-read, leading to a server crash. For named binaries compiled for 32-bit platforms, this flaw can be used to trigger a server crash due to a buffer overflow and possibly also to achieve remote code execution. We have determined that standard SPNEGO implementations are available in the MIT and Heimdal Kerberos libraries, which support a broad range of operating systems, rendering the ISC implementation unnecessary and obsolete. Therefore, to reduce the attack surface for BIND users, we will be removing the ISC SPNEGO implementation in the April releases of BIND 9.11 and 9.16 (it had already been dropped from BIND 9.17). We would not normally remove something from a stable ESV (Extended Support Version) of BIND, but since system libraries can replace the ISC SPNEGO implementation, we have made an exception in this case for reasons of stability and security."
      }
    ],
    "references": [
      {
        "url": "https://kb.isc.org/v1/docs/cve-2021-25215",
        "name": "https://kb.isc.org/v1/docs/cve-2021-25215",
        "refsource": "CONFIRM",
        "tags": [
          "Not Applicable"
        ]
      },
      {
        "url": "http://www.openwall.com/lists/oss-security/2021/04/29/1",
        "name": "[oss-security] 20210428 ISC discloses three BIND vulnerabilities (CVE-2021-25214, CVE-2021-25215, and CVE-2021-25216)",
        "refsource": "MLIST",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://www.openwall.com/lists/oss-security/2021/04/29/2",
        "name": "[oss-security] 20210429 Re: ISC discloses three BIND vulnerabilities (CVE-2021-25214, CVE-2021-25215, and CVE-2021-25216)",
        "refsource": "MLIST",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://www.openwall.com/lists/oss-security/2021/04/29/3",
        "name": "[oss-security] 20210429 Re: ISC discloses three BIND vulnerabilities (CVE-2021-25214, CVE-2021-25215, and CVE-2021-25216)",
        "refsource": "MLIST",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://www.openwall.com/lists/oss-security/2021/04/29/4",
        "name": "[oss-security] 20210429 Re: ISC discloses three BIND vulnerabilities (CVE-2021-25214, CVE-2021-25215, and CVE-2021-25216)",
        "refsource": "MLIST",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://www.debian.org/security/2021/dsa-4909",
        "name": "DSA-4909",
        "refsource": "DEBIAN",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://lists.debian.org/debian-lts-announce/2021/05/msg00001.html",
        "name": "[debian-lts-announce] 20210504 [SECURITY] [DLA 2647-1] bind9 security update",
        "refsource": "MLIST",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://security.netapp.com/advisory/ntap-20210521-0006/",
        "name": "https://security.netapp.com/advisory/ntap-20210521-0006/",
        "refsource": "CONFIRM",
        "tags": []
      }
    ]
  },
  {
    "cveID": "CVE-2021-29614",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T18:59Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.io.decode_raw` produces incorrect results and crashes the Python interpreter when combining `fixed_length` and wider datatypes. The implementation of the padded version(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc) is buggy due to a confusion about pointer arithmetic rules. First, the code computes(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L61) the width of each output element by dividing the `fixed_length` value to the size of the type argument. The `fixed_length` argument is also used to determine the size needed for the output tensor(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L63-L79). This is followed by reencoding code(https://github.com/tensorflow/tensorflow/blob/1d8903e5b167ed0432077a3db6e462daf781d1fe/tensorflow/core/kernels/decode_padded_raw_op.cc#L85-L94). The erroneous code is the last line above: it is moving the `out_data` pointer by `fixed_length * sizeof(T)` bytes whereas it only copied at most `fixed_length` bytes from the input. This results in parts of the input not being decoded into the output. Furthermore, because the pointer advance is far wider than desired, this quickly leads to writing to outside the bounds of the backing data. This OOB write leads to interpreter crash in the reproducer mentioned here, but more severe attacks can be mounted too, given that this gadget allows writing to periodically placed locations in memory. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d",
        "name": "https://github.com/tensorflow/tensorflow/commit/698e01511f62a3c185754db78ebce0eee1f0184d",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29519",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T17:24Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. The API of `tf.raw_ops.SparseCross` allows combinations which would result in a `CHECK`-failure and denial of service. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/3d782b7d47b1bf2ed32bd4a246d6d6cadc4c903d/tensorflow/core/kernels/sparse_cross_op.cc#L114-L116) is tricked to consider a tensor of type `tstring` which in fact contains integral elements. Fixing the type confusion by preventing mixing `DT_STRING` and `DT_INT64` types solves this issue. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-772j-h9xw-ffp5",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-772j-h9xw-ffp5",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025",
        "name": "https://github.com/tensorflow/tensorflow/commit/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29521",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T17:19Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. Specifying a negative dense shape in `tf.raw_ops.SparseCountSparseOutput` results in a segmentation fault being thrown out from the standard library as `std::vector` invariants are broken. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624/tensorflow/core/kernels/count_ops.cc#L199-L213) assumes the first element of the dense shape is always positive and uses it to initialize a `BatchedMap<T>` (i.e., `std::vector<absl::flat_hash_map<int64,T>>`(https://github.com/tensorflow/tensorflow/blob/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624/tensorflow/core/kernels/count_ops.cc#L27)) data structure. If the `shape` tensor has more than one element, `num_batches` is the first value in `shape`. Ensuring that the `dense_shape` argument is a valid tensor shape (that is, all elements are non-negative) solves this issue. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
        "name": "https://github.com/tensorflow/tensorflow/commit/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hr84-fqvp-48mm",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hr84-fqvp-48mm",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29522",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T17:16Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. The `tf.raw_ops.Conv3DBackprop*` operations fail to validate that the input tensors are not empty. In turn, this would result in a division by 0. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/a91bb59769f19146d5a0c20060244378e878f140/tensorflow/core/kernels/conv_grad_ops_3d.cc#L430-L450) does not check that the divisor used in computing the shard size is not zero. Thus, if attacker controls the input sizes, they can trigger a denial of service via a division by zero error. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c968-pq7h-7fxv",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c968-pq7h-7fxv",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
        "name": "https://github.com/tensorflow/tensorflow/commit/311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29523",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T17:06Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.AddManySparseToTensorsMap`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/6f9896890c4c703ae0a0845394086e2e1e523299/tensorflow/core/kernels/sparse_tensors_map_ops.cc#L257) takes the values specified in `sparse_shape` as dimensions for the output shape. The `TensorShape` constructor(https://github.com/tensorflow/tensorflow/blob/6f9896890c4c703ae0a0845394086e2e1e523299/tensorflow/core/framework/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when `InitDims`(https://github.com/tensorflow/tensorflow/blob/6f9896890c4c703ae0a0845394086e2e1e523299/tensorflow/core/framework/tensor_shape.cc#L212-L296) returns a non-OK status. This is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c",
        "name": "https://github.com/tensorflow/tensorflow/commit/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2cpx-427x-q2c6",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2cpx-427x-q2c6",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29583",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T16:55Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of `tf.raw_ops.FusedBatchNorm` is vulnerable to a heap buffer overflow. If the tensors are empty, the same implementation can trigger undefined behavior by dereferencing null pointers. The implementation(https://github.com/tensorflow/tensorflow/blob/57d86e0db5d1365f19adcce848dfc1bf89fdd4c7/tensorflow/core/kernels/fused_batch_norm_op.cc) fails to validate that `scale`, `offset`, `mean` and `variance` (the last two only when required) all have the same number of elements as the number of channels of `x`. This results in heap out of bounds reads when the buffers backing these tensors are indexed past their boundary. If the tensors are empty, the validation mentioned in the above paragraph would also trigger and prevent the undefined behavior. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0",
        "name": "https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9xh4-23q4-v6wr",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9xh4-23q4-v6wr",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29565",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T16:53Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.SparseFillEmptyRows`. This is because of missing validation(https://github.com/tensorflow/tensorflow/blob/fdc82089d206e281c628a93771336bf87863d5e8/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc#L230-L231) that was covered under a `TODO`. If the `dense_shape` tensor is empty, then `dense_shape_t.vec<>()` would cause a null pointer dereference in the implementation of the op. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6pg-pjwc-j585",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6pg-pjwc-j585",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/faa76f39014ed3b5e2c158593b1335522e573c7f",
        "name": "https://github.com/tensorflow/tensorflow/commit/faa76f39014ed3b5e2c158593b1335522e573c7f",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29564",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T16:50Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.EditDistance`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/79865b542f9ffdc9caeb255631f7c56f1d4b6517/tensorflow/core/kernels/edit_distance_op.cc#L103-L159) has incomplete validation of the input parameters. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75f6-78jr-4656",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75f6-78jr-4656",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
        "name": "https://github.com/tensorflow/tensorflow/commit/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  },
  {
    "cveID": "CVE-2021-29609",
    "cveASSIGNER": "security-advisories@github.com",
    "publishedDate": "2021-05-14T20:15Z",
    "lastModifiedDate": "2021-05-20T16:45Z",
    "description": [
      {
        "lang": "en",
        "value": "TensorFlow is an end-to-end open source platform for machine learning. Incomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data. The implementation(https://github.com/tensorflow/tensorflow/blob/656e7673b14acd7835dc778867f84916c6d1cac2/tensorflow/core/kernels/sparse_add_op.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range."
      }
    ],
    "references": [
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/41727ff06111117bdf86b37db198217fd7a143cc",
        "name": "https://github.com/tensorflow/tensorflow/commit/41727ff06111117bdf86b37db198217fd7a143cc",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cjc7-49v2-jp64",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cjc7-49v2-jp64",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/6fd02f44810754ae7481838b6a67c5df7f909ca3",
        "name": "https://github.com/tensorflow/tensorflow/commit/6fd02f44810754ae7481838b6a67c5df7f909ca3",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      }
    ]
  }
]
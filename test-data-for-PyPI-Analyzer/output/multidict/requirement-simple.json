{
  "name": "multidict",
  "description": "=========\nmultidict\n=========\n\n.. image:: https://github.com/aio-libs/multidict/workflows/CI/badge.svg\n   :target: https://github.com/aio-libs/multidict/actions?query=workflow%3ACI\n   :alt: GitHub status for master branch\n\n.. image:: https://codecov.io/gh/aio-libs/multidict/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/aio-libs/multidict\n   :alt: Coverage metrics\n\n.. image:: https://img.shields.io/pypi/v/multidict.svg\n   :target: https://pypi.org/project/multidict\n   :alt: PyPI\n\n.. image:: https://readthedocs.org/projects/multidict/badge/?version=latest\n   :target: http://multidict.readthedocs.org/en/latest/?badge=latest\n   :alt: Documentationb\n\n.. image:: https://img.shields.io/pypi/pyversions/multidict.svg\n   :target: https://pypi.org/project/multidict\n   :alt: Python versions\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/aio-libs/Lobby\n   :alt: Chat on Gitter\n\nMultidict is dict-like collection of *key-value pairs* where key\nmight be occurred more than once in the container.\n\nIntroduction\n------------\n\n*HTTP Headers* and *URL query string* require specific data structure:\n*multidict*. It behaves mostly like a regular ``dict`` but it may have\nseveral *values* for the same *key* and *preserves insertion ordering*.\n\nThe *key* is ``str`` (or ``istr`` for case-insensitive dictionaries).\n\n``multidict`` has four multidict classes:\n``MultiDict``, ``MultiDictProxy``, ``CIMultiDict``\nand ``CIMultiDictProxy``.\n\nImmutable proxies (``MultiDictProxy`` and\n``CIMultiDictProxy``) provide a dynamic view for the\nproxied multidict, the view reflects underlying collection changes. They\nimplement the ``collections.abc.Mapping`` interface.\n\nRegular mutable (``MultiDict`` and ``CIMultiDict``) classes\nimplement ``collections.abc.MutableMapping`` and allows to change\ntheir own content.\n\n\n*Case insensitive* (``CIMultiDict`` and\n``CIMultiDictProxy``) ones assume the *keys* are case\ninsensitive, e.g.::\n\n   >>> dct = CIMultiDict(key='val')\n   >>> 'Key' in dct\n   True\n   >>> dct['Key']\n   'val'\n\n*Keys* should be ``str`` or ``istr`` instances.\n\nThe library has optional C Extensions for sake of speed.\n\n\nLicense\n-------\n\nApache 2\n\nLibrary Installation\n--------------------\n\n.. code-block:: bash\n\n   $ pip install multidict\n\nThe library is Python 3 only!\n\nPyPI contains binary wheels for Linux, Windows and MacOS.  If you want to install\n``multidict`` on another operation system (or *Alpine Linux* inside a Docker) the\nTarball will be used to compile the library from sources.  It requires C compiler and\nPython headers installed.\n\nTo skip the compilation please use `MULTIDICT_NO_EXTENSIONS` environment variable,\ne.g.:\n\n.. code-block:: bash\n\n   $ MULTIDICT_NO_EXTENSIONS=1 pip install multidict\n\nPlease note, Pure Python (uncompiled) version is about 20-50 times slower depending on\nthe usage scenario!!!\n\n\n\nChangelog\n---------\nSee `RTD page <http://multidict.readthedocs.org/en/latest/changes.html>`_.\n\n",
  "requires_dist": null,
  "requires_python": ">=3.6",
  "current_version": "5.1.0",
  "released_versions": [
    "0.0.1",
    "1.0.0a0",
    "1.0.1",
    "1.0.2",
    "1.0.3",
    "1.1.0",
    "1.1.0a0",
    "1.1.0a1",
    "1.1.0a2",
    "1.1.0a3",
    "1.1.0a5",
    "1.1.0a6",
    "1.1.0b1",
    "1.1.0b2",
    "1.1.0b3",
    "1.1.0b4",
    "1.1.0b5",
    "1.1.0b6",
    "1.1.0b7",
    "1.1.0b8",
    "1.2.0",
    "1.2.1",
    "1.2.2",
    "1.3.0a0",
    "1.3.0a1",
    "2.0.0",
    "2.0.1",
    "2.1.0",
    "2.1.1",
    "2.1.2",
    "2.1.3",
    "2.1.4",
    "2.1.5",
    "2.1.6",
    "3.0.0",
    "3.1.0",
    "3.1.1",
    "3.1.2",
    "3.1.3",
    "3.1.3a0",
    "3.1.4a0",
    "3.1.4a1",
    "3.1.4a2",
    "3.1.4a3",
    "3.2.0",
    "3.2.0a3",
    "3.2.1a0",
    "3.3.0",
    "3.3.1",
    "3.3.2",
    "4.0.0",
    "4.1.0",
    "4.2.0",
    "4.3.0",
    "4.3.1",
    "4.4.0",
    "4.4.0a0",
    "4.4.0a1",
    "4.4.0a10",
    "4.4.0a11",
    "4.4.0a12",
    "4.4.0a13",
    "4.4.0a14",
    "4.4.0a15",
    "4.4.0a16",
    "4.4.0a17",
    "4.4.0a18",
    "4.4.0a19",
    "4.4.0a2",
    "4.4.0a20",
    "4.4.0a21",
    "4.4.0a22",
    "4.4.0a23",
    "4.4.0a24",
    "4.4.0a25",
    "4.4.0a26",
    "4.4.0a27",
    "4.4.0a28",
    "4.4.0a29",
    "4.4.0a3",
    "4.4.0a30",
    "4.4.0a31",
    "4.4.0a32",
    "4.4.0a33",
    "4.4.0a34",
    "4.4.0a35",
    "4.4.0a36",
    "4.4.0a37",
    "4.4.0a38",
    "4.4.0a39",
    "4.4.0a4",
    "4.4.0a40",
    "4.4.0a42",
    "4.4.0a5",
    "4.4.0a6",
    "4.4.0a7",
    "4.4.0a8",
    "4.4.0a9",
    "4.4.1",
    "4.4.2",
    "4.5.0",
    "4.5.1",
    "4.5.2",
    "4.6.0",
    "4.6.0a2",
    "4.6.0a3",
    "4.6.1",
    "4.7.0",
    "4.7.1",
    "4.7.2",
    "4.7.3",
    "4.7.4",
    "4.7.5",
    "4.7.6",
    "5.0.0",
    "5.0.1",
    "5.0.2",
    "5.1.0"
  ]
}
{
  "name": "tzlocal",
  "description": "tzlocal\n=======\n\nThis Python module returns a ``tzinfo`` object with the local timezone information under Unix and Win-32.\nIt requires ``pytz``, and returns ``pytz`` ``tzinfo`` objects.\n\nThis module attempts to fix a glaring hole in ``pytz``, that there is no way to\nget the local timezone information, unless you know the zoneinfo name, and\nunder several Linux distros that's hard or impossible to figure out.\n\nAlso, with Windows different timezone system using pytz isn't of much use\nunless you separately configure the zoneinfo timezone name.\n\nWith ``tzlocal`` you only need to call ``get_localzone()`` and you will get a\n``tzinfo`` object with the local time zone info. On some Unices you will still\nnot get to know what the timezone name is, but you don't need that when you\nhave the tzinfo file. However, if the timezone name is readily available it\nwill be used.\n\n\nSupported systems\n-----------------\n\nThese are the systems that are in theory supported:\n\n * Windows 2000 and later\n\n * Any unix-like system with a ``/etc/localtime`` or ``/usr/local/etc/localtime``\n\nIf you have one of the above systems and it does not work, it's a bug.\nPlease report it.\n\nPlease note that if you getting a time zone called ``local``, this is not a bug, it's\nactually the main feature of ``tzlocal``, that even if your system does NOT have a configuration file\nwith the zoneinfo name of your time zone, it will still work.\n\nYou can also use ``tzlocal`` to get the name of your local timezone, but only if your system is\nconfigured to make that possible. ``tzlocal`` looks for the timezone name in ``/etc/timezone``, ``/var/db/zoneinfo``,\n``/etc/sysconfig/clock`` and ``/etc/conf.d/clock``. If your ``/etc/localtime`` is a symlink it can also extract the\nname from that symlink.\n\nIf you need the name of your local time zone, then please make sure your system is properly configured to allow that.\nIf it isn't configured, tzlocal will default to UTC.\n\nUsage\n-----\n\nLoad the local timezone:\n\n    >>> from tzlocal import get_localzone\n    >>> tz = get_localzone()\n    >>> tz\n    <DstTzInfo 'Europe/Warsaw' WMT+1:24:00 STD>\n\nCreate a local datetime:\n\n    >>> from datetime import datetime\n    >>> dt = tz.localize(datetime(2015, 4, 10, 7, 22))\n    >>> dt\n    datetime.datetime(2015, 4, 10, 7, 22, tzinfo=<DstTzInfo 'Europe/Warsaw' CEST+2:00:00 DST>)\n\nLookup another timezone with `pytz`:\n\n    >>> import pytz\n    >>> eastern = pytz.timezone('US/Eastern')\n\nConvert the datetime:\n\n    >>> dt.astimezone(eastern)\n    datetime.datetime(2015, 4, 10, 1, 22, tzinfo=<DstTzInfo 'US/Eastern' EDT-1 day, 20:00:00 DST>)\n\n\nMaintainer\n----------\n\n* Lennart Regebro, regebro@gmail.com\n\nContributors\n------------\n\n* Marc Van Olmen\n* Benjamen Meyer\n* Manuel Ebert\n* Xiaokun Zhu\n* Cameris\n* Edward Betts\n* McK KIM\n* Cris Ewing\n* Ayala Shachar\n* Lev Maximov\n* Jakub Wilk\n* John Quarles\n* Preston Landers\n* Victor Torres\n* Jean Jordaan\n* Zackary Welch\n* Micka\u00ebl Schoentgen\n* Gabriel Corona\n\n(Sorry if I forgot someone)\n\nLicense\n-------\n\n* MIT https://opensource.org/licenses/MIT\n\n\nChanges\n=======\n\n2.1 (2020-05-08)\n----------------\n\n- No changes.\n\n\n2.1b1 (2020-02-08)\n------------------\n\n- The is_dst flag is wrong for Europe/Dublin on some Unix releases.\n  I changed to another way of determining if DST is in effect or not.\n\n- Added support for Python 3.7 and 3.8. Dropped 3.5 although it still works.\n\n\n2.0.0 (2019-07-23)\n------------------\n\n- No differences since 2.0.0b3\n\nMajor differences since 1.5.1\n.............................\n\n- When no time zone configuration can be find, tzlocal now return UTC.\n  This is a major difference from 1.x, where an exception would be raised.\n  This change is because Docker images often have no configuration at all,\n  and the unix utilities will then default to UTC, so we follow that.\n\n- If tzlocal on Unix finds a timezone name in a /etc config file, then\n  tzlocal now verifies that the timezone it fouds has the same offset as\n  the local computer is configured with. If it doesn't, something is\n  configured incorrectly. (Victor Torres, regebro)\n\n- Get timezone via Termux `getprop` wrapper on Android. It's not officially\n  supported because we can't test it, but at least we make an effort.\n  (Jean Jordaan)\n\nMinor differences and bug fixes\n...............................\n\n- Skip comment lines when parsing /etc/timezone. (Edward Betts)\n\n- Don't load timezone from current directory. (Gabriel Corona)\n\n- Now verifies that the config files actually contain something before\n  reading them. (Zackary Welch, regebro)\n\n- Got rid of a BytesWarning (Micka\u00ebl Schoentgen)\n\n- Now handles if config file paths exists, but are directories.\n\n- Moved tests out from distributions\n\n- Support wheels\n\n\n1.5.1 (2017-12-01)\n------------------\n\n- 1.5 had a bug that slipped through testing, fixed that,\n  increased test coverage.\n\n\n1.5 (2017-11-30)\n----------------\n\n- No longer treats macOS as special, but as a unix.\n\n- get_windows_info.py is renamed to update_windows_mappings.py\n\n- Windows mappings now also contain mappings from deprecated zoneinfo names.\n  (Preston-Landers, regebro)\n\n\n1.4 (2017-04-18)\n----------------\n\n- I use MIT on my other projects, so relicensing.\n\n\n1.4b1 (2017-04-14)\n------------------\n\n- Dropping support for Python versions nobody uses (2.5, 3.1, 3.2), adding 3.6\n  Python 3.1 and 3.2 still works, 2.5 has been broken for some time.\n\n- Ayalash's OS X fix didn't work on Python 2.7, fixed that.\n\n\n1.3.2 (2017-04-12)\n------------------\n\n- Ensure closing of subprocess on OS X (ayalash)\n\n- Removed unused imports (jwilk)\n\n- Closes stdout and stderr to get rid of ResourceWarnings (johnwquarles)\n\n- Updated Windows timezones (axil)\n\n\n1.3 (2016-10-15)\n----------------\n\n- #34: Added support for /var/db/zoneinfo\n\n\n1.2.2 (2016-03-02)\n------------------\n\n- #30: Fixed a bug on OS X.\n\n\n1.2.1 (2016-02-28)\n------------------\n\n- Tests failed if TZ was set in the environment. (EdwardBetts)\n\n- Replaces os.popen() with subprocess.Popen() for OS X to\n  handle when systemsetup doesn't exist. (mckabi, cewing)\n\n\n1.2 (2015-06-14)\n----------------\n\n- Systemd stores no time zone name, forcing us to look at the name of the file\n  that localtime symlinks to. (cameris)\n\n\n1.1.2 (2014-10-18)\n------------------\n\n- Timezones that has 3 items did not work on Mac OS X.\n  (Marc Van Olmen)\n\n- Now doesn't fail if the TZ environment variable isn't an Olsen time zone.\n\n- Some timezones on Windows can apparently be empty (perhaps the are deleted).\n  Now these are ignored.\n  (Xiaokun Zhu)\n\n\n1.1.1 (2014-01-29)\n------------------\n\n- I forgot to add Etc/UTC as an alias for Etc/GMT.\n\n\n1.1 (2014-01-28)\n----------------\n\n- Adding better support for OS X.\n\n- Added support to map from tzdata/Olsen names to Windows names.\n  (Thanks to Benjamen Meyer).\n\n\n1.0 (2013-05-29)\n----------------\n\n- Fixed some more cases where spaces needs replacing with underscores.\n\n- Better handling of misconfigured /etc/timezone.\n\n- Better error message on Windows if we can't find a timezone at all.\n\n\n0.3 (2012-09-13)\n----------------\n\n- Windows 7 support.\n\n- Python 2.5 supported; because it only needed a __future__ import.\n\n- Python 3.3 tested, it worked.\n\n- Got rid of relative imports, because I don't actually like them,\n  so I don't know why I used them in the first place.\n\n- For each Windows zone, use the default zoneinfo zone, not the last one.\n\n\n0.2 (2012-09-12)\n----------------\n\n- Python 3 support.\n\n\n0.1 (2012-09-11)\n----------------\n\n- Initial release.\n\n\n",
  "requires_dist": [
    "pytz"
  ],
  "requires_python": "",
  "current_version": "2.1",
  "released_versions": [
    "0.1",
    "0.2",
    "0.3",
    "1.0",
    "1.1",
    "1.1.1",
    "1.1.2",
    "1.1.3",
    "1.2",
    "1.2.1",
    "1.2.2",
    "1.3",
    "1.3.2",
    "1.4",
    "1.4b1",
    "1.5.1",
    "2.0.0",
    "2.0.0b1",
    "2.0.0b2",
    "2.0.0b3",
    "2.1",
    "2.1b1",
    "3.0b1"
  ]
}
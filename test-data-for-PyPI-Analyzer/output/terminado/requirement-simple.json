{
  "name": "terminado",
  "description": "This is a `Tornado <http://tornadoweb.org/>`_ websocket backend for the\n`Xterm.js <https://xtermjs.org/>`_ Javascript terminal emulator\nlibrary.\n\nIt evolved out of `pyxterm <https://github.com/mitotic/pyxterm>`_, which was\npart of `GraphTerm <https://github.com/mitotic/graphterm>`_ (as lineterm.py),\nv0.57.0 (2014-07-18), and ultimately derived from the public-domain `Ajaxterm\n<http://antony.lesuisse.org/software/ajaxterm/>`_ code, v0.11 (2008-11-13) (also\non Github as part of `QWeb <https://github.com/antonylesuisse/qweb>`_).\n\nModules:\n\n* ``terminado.management``: controls launching virtual terminals,\n  connecting them to Tornado's event loop, and closing them down.\n* ``terminado.websocket``: Provides a websocket handler for communicating with\n  a terminal.\n* ``terminado.uimodule``: Provides a ``Terminal`` Tornado `UI Module\n  <http://www.tornadoweb.org/en/stable/guide/templates.html#ui-modules>`_.\n\nJS:\n\n* ``terminado/_static/terminado.js``: A lightweight wrapper to set up a\n  term.js terminal with a websocket.\n\nLocal Installation:\n\n    $ pip install -e .[test]\n\n\nUsage example:\n\n.. code:: python\n\n    import os.path\n    import tornado.web\n    import tornado.ioloop\n    # This demo requires tornado_xstatic and XStatic-term.js\n    import tornado_xstatic\n\n    import terminado\n    STATIC_DIR = os.path.join(os.path.dirname(terminado.__file__), \"_static\")\n\n    class TerminalPageHandler(tornado.web.RequestHandler):\n        def get(self):\n            return self.render(\"termpage.html\", static=self.static_url,\n                               xstatic=self.application.settings['xstatic_url'],\n                               ws_url_path=\"/websocket\")\n\n    if __name__ == '__main__':\n        term_manager = terminado.SingleTermManager(shell_command=['bash'])\n        handlers = [\n                    (r\"/websocket\", terminado.TermSocket,\n                         {'term_manager': term_manager}),\n                    (r\"/\", TerminalPageHandler),\n                    (r\"/xstatic/(.*)\", tornado_xstatic.XStaticFileHandler,\n                         {'allowed_modules': ['termjs']})\n                   ]\n        app = tornado.web.Application(handlers, static_path=STATIC_DIR,\n                          xstatic_url = tornado_xstatic.url_maker('/xstatic/'))\n        # Serve at http://localhost:8765/ N.B. Leaving out 'localhost' here will\n        # work, but it will listen on the public network interface as well.\n        # Given what terminado does, that would be rather a security hole.\n        app.listen(8765, 'localhost')\n        try:\n            tornado.ioloop.IOLoop.instance().start()\n        finally:\n            term_manager.shutdown()\n\nSee the `demos directory <https://github.com/takluyver/terminado/tree/master/demos>`_\nfor more examples. This is a simplified version of the ``single.py`` demo.\n\nRun the unit tests with:\n\n    $ pytest\n\n\n",
  "requires_dist": [
    "tornado (>=4)",
    "ptyprocess ; os_name != \"nt\"",
    "pywinpty (>=0.5) ; os_name == \"nt\"",
    "pytest ; extra == 'test'"
  ],
  "requires_python": ">=3.6",
  "current_version": "0.9.4",
  "released_versions": [
    "0.1",
    "0.2",
    "0.3",
    "0.3.1",
    "0.3.2",
    "0.3.3",
    "0.4",
    "0.5",
    "0.6",
    "0.7",
    "0.8",
    "0.8.1",
    "0.8.2",
    "0.8.3",
    "0.9.0",
    "0.9.1",
    "0.9.2",
    "0.9.3",
    "0.9.4"
  ]
}
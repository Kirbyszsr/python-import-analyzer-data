{
  "name": "mkdocs-material-extensions",
  "description": "[![Donate via PayPal][donate-image]][donate-link]\n[![Build][github-ci-image]][github-ci-link]\n[![Coverage Status][codecov-image]][codecov-link]\n[![PyPI Version][pypi-image]][pypi-link]\n[![PyPI - Python Version][python-image]][pypi-link]\n![License][license-image-mit]\n# MkDocs Material Extensions\n\nMarkdown extension resources for [MkDocs for Material][mkdocs-material]\n\n## Install\n\n```\npip install mkdocs-material-extensions\n```\n\n## Inline SVG Icons\n\nMkDocs Material provides numerous icons from Material, FontAwesome, and Octicons, but it does so by inlining the SVG\nicons into the source. Currently there is no easy way access these icons and arbitrarily insert them into Markdown\ncontent. Users must include the icon fonts themselves and do it with HTML.\n\nThis module allows you to use PyMdown Extensions' [Emoji][emoji] extension to enable easy insertion of MkDocs Material's\nSVG assets using simple `:emoji-syntax:`.  This is done by creating our own [emoji index][emoji-index] and\n[emoji generator][emoji-generator]. The custom index provides a modified version of the Emoji extensions Twemoji\nindex.\n\nIn addition to the custom index, you must also specify the associated custom generator. This will will find the\nappropriate icon and insert it into your Markdown content as an inlined SVG.\n\nExample:\n\n```yaml\nmarkdown_extensions:\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n```\n\nThen, using the folder structure of Material's `.icons` folder, you can specify icons:\n\n```\nWe can use Material Icons :material-airplane:.\n\nWe can also use Fontawesome Icons :fontawesome-solid-ambulance:.\n\nThat's not all, we can also use Octicons :octicons-octoface:.\n```\n\n## Using Local Custom Icons\n\nIn MkDocs, you can override theme assets locally, and even add assets to the theme. Unfortunately, the Markdown parsing\nprocess isn't aware of the MkDocs environment. Luckily, if you are using PyMdown Extensions 7.1, you can pass in custom\nicon paths that will be used when constructing the emoji index and include your custom SVG assets. If a folder path of\n`theme/my_icons` was given to the index builder, all icons under `my_project/my_icons`, even in sub-folders, would\nbecome part of the index.\n\n```yaml\nmarkdown_extensions:\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n      options:\n        custom_icons:\n          - theme/my_icons\n```\n\nIf given an icon at `my_project/my_icons/animals/bird.svg`, the icon would be available using the emoji syntax as\n`:animals-bird:`. Notice that the base folder that is provided doesn't contribute to the icon's name. Also, folders\nare separated with `-`. Folder names and icon names should be compatible with the emoji syntax, so special characters\nshould be avoided -- `-` and `_` are okay.\n\nYou can provide as many paths as you would like, and they will be evaluated in the order that they are specified. The\nMaterial theme's own icons will be evaluated after all custom paths. This allows a user to override Material's icons if\ndesired.\n\nIf an icon name is already in the index, the icon will not be added. It is recommended to always have your icons in\nsub-folders to help namespace them to avoid name collisions. In the example above, `bird` was under `animals` which\ncreated the name `:animals-bird:` and helped create a more unique name with less of a chance of creating a duplicate\nname with existing emoji and Material icons.\n\n[emoji]: https://facelessuser.github.io/pymdown-extensions/extensions/emoji/\n[emoji-index]: https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-indexes\n[emoji-generator]: https://facelessuser.github.io/pymdown-extensions/extensions/emoji/#custom-emoji-generators\n[mkdocs-material]: https://github.com/squidfunk/mkdocs-material\n\n[donate-image]: https://img.shields.io/badge/Donate-PayPal-3fabd1?logo=paypal\n[donate-link]: https://www.paypal.me/facelessuser\n[github-ci-image]: https://github.com/facelessuser/mkdocs-material-extensions/workflows/build/badge.svg?branch=master&event=push\n[github-ci-link]: https://github.com/facelessuser/mkdocs-material-extensions/actions?query=workflow%3Abuild+branch%3Amaster\n[discord-image]: https://img.shields.io/discord/678289859768745989?logo=discord&logoColor=aaaaaa&color=mediumpurple&labelColor=333333\n[discord-link]: https://discord.gg/TWs8Tgr\n[codecov-image]: https://img.shields.io/codecov/c/github/facelessuser/mkdocs-material-extensions/master.svg?logo=codecov&logoColor=aaaaaa&labelColor=333333\n[codecov-link]: https://codecov.io/github/facelessuser/mkdocs-material-extensions\n[pypi-image]: https://img.shields.io/pypi/v/mkdocs-material-extensions.svg?logo=pypi&logoColor=aaaaaa&labelColor=333333\n[pypi-link]: https://pypi.python.org/pypi/mkdocs-material-extensions\n[python-image]: https://img.shields.io/pypi/pyversions/mkdocs-material-extensions?logo=python&logoColor=aaaaaa&labelColor=333333\n[license-image-mit]: https://img.shields.io/badge/license-MIT-blue.svg?labelColor=333333\n\n\n",
  "requires_dist": [
    "mkdocs-material (>=5.0.0)"
  ],
  "requires_python": ">=3.5",
  "current_version": "1.0.1",
  "released_versions": [
    "1.0",
    "1.0.1",
    "1.0b1",
    "1.0b2"
  ]
}
{
  "name": "pytest-qt",
  "description": "=========\npytest-qt\n=========\n\npytest-qt is a `pytest`_ plugin that allows programmers to write tests\nfor `PySide`_, ``PySide2`` and `PyQt`_ applications.\n\nThe main usage is to use the ``qtbot`` fixture, responsible for handling ``qApp``\ncreation as needed and provides methods to simulate user interaction,\nlike key presses and mouse clicks:\n\n\n.. code-block:: python\n\n    def test_hello(qtbot):\n        widget = HelloWidget()\n        qtbot.addWidget(widget)\n\n        # click in the Greet button and make sure it updates the appropriate label\n        qtbot.mouseClick(widget.button_greet, QtCore.Qt.LeftButton)\n\n        assert widget.greet_label.text() == \"Hello!\"\n\n\n.. _PySide: https://pypi.python.org/pypi/PySide\n.. _PySide2: https://wiki.qt.io/PySide2\n.. _PyQt: http://www.riverbankcomputing.com/software/pyqt\n.. _pytest: http://pytest.org\n\nThis allows you to test and make sure your view layer is behaving the way you expect after each code change.\n\n.. |version| image:: http://img.shields.io/pypi/v/pytest-qt.svg\n  :target: https://pypi.python.org/pypi/pytest-qt\n\n.. |conda-forge| image:: https://img.shields.io/conda/vn/conda-forge/pytest-qt.svg\n    :target: https://anaconda.org/conda-forge/pytest-qt\n\n.. |ci| image:: https://github.com/pytest-dev/pytest-qt/workflows/build/badge.svg\n  :target: https://github.com/pytest-dev/pytest-qt/actions\n\n.. |coverage| image:: http://img.shields.io/coveralls/pytest-dev/pytest-qt.svg\n  :target: https://coveralls.io/r/pytest-dev/pytest-qt\n\n.. |docs| image:: https://readthedocs.org/projects/pytest-qt/badge/?version=latest\n  :target: https://pytest-qt.readthedocs.io\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/pytest-qt.svg\n  :target: https://pypi.python.org/pypi/pytest-qt/\n  :alt: Supported Python versions\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/ambv/black\n\n|python| |version| |conda-forge| |ci| |coverage| |docs| |black|\n\n\nFeatures\n========\n\n- `qtbot`_ fixture to simulate user interaction with ``Qt`` widgets.\n- `Automatic capture`_ of ``qDebug``, ``qWarning`` and ``qCritical`` messages;\n- waitSignal_ and waitSignals_ functions to block test execution until specific\n  signals are emitted.\n- `Exceptions in virtual methods and slots`_ are automatically captured and\n  fail tests accordingly.\n\n.. _qtbot: https://pytest-qt.readthedocs.io/en/latest/reference.html#module-pytestqt.qtbot\n.. _Automatic capture: https://pytest-qt.readthedocs.io/en/latest/logging.html\n.. _waitSignal: https://pytest-qt.readthedocs.io/en/latest/signals.html\n.. _waitSignals: https://pytest-qt.readthedocs.io/en/latest/signals.html\n.. _Exceptions in virtual methods and slots: https://pytest-qt.readthedocs.io/en/latest/virtual_methods.html\n\nRequirements\n============\n\nWorks with either PySide_, PySide2_ or PyQt_ (``PyQt5`` and ``PyQt4``) picking whichever\nis available on the system, giving preference to the first one installed in\nthis order:\n\n- ``PySide2``\n- ``PyQt5``\n- ``PySide``\n- ``PyQt4``\n\nTo force a particular API, set the configuration variable ``qt_api`` in your ``pytest.ini`` file to\n``pyqt5``, ``pyside``, ``pyside2``, ``pyqt4`` or ``pyqt4v2``. ``pyqt4v2`` sets the ``PyQt4``\nAPI to `version 2`_.\n\n.. code-block:: ini\n\n    [pytest]\n    qt_api=pyqt5\n\n\nAlternatively, you can set the ``PYTEST_QT_API`` environment\nvariable to the same values described above (the environment variable wins over the configuration\nif both are set).\n\n.. _version 2: http://pyqt.sourceforge.net/Docs/PyQt4/incompatible_apis.html\n\n\nDocumentation\n=============\n\nFull documentation and tutorial available at `Read the Docs`_.\n\n.. _Read The Docs: https://pytest-qt.readthedocs.io\n\nChange Log\n==========\n\nPlease consult the `changelog page`_.\n\n.. _changelog page: https://pytest-qt.readthedocs.io/en/latest/changelog.html\n\nBugs/Requests\n=============\n\nPlease report any issues or feature requests in the `issue tracker`_.\n\n.. _issue tracker: https://github.com/pytest-dev/pytest-qt/issues\n\nContributing\n============\n\nContributions are welcome, so feel free to submit a bug or feature\nrequest.\n\nPull requests are highly appreciated! If you\ncan, include some tests that exercise the new code or test that a bug has been\nfixed, and make sure to include yourself in the contributors list. :)\n\nTo prepare your environment, create a virtual environment and install ``pytest-qt`` in editable mode with ``dev``\nextras::\n\n    $ pip install --editable .[dev]\n\nAfter that install ``pre-commit`` for pre-commit checks::\n\n    $ pre-commit install\n\nRunning tests\n-------------\n\nTests are run using `tox`_. It is recommended to develop locally on Python 3 because\n``PyQt5`` and ``PySide2`` are easily installable using ``pip``::\n\n    $ tox -e py37-pyside2,py37-pyqt5\n\n``pytest-qt`` is formatted using `black <https://github.com/ambv/black>`_ and uses\n`pre-commit <https://github.com/pre-commit/pre-commit>`_ for linting checks before commits. You\ncan install ``pre-commit`` locally with::\n\n    $ pip install pre-commit\n    $ pre-commit install\n\n\nContributors\n------------\n\nMany thanks to:\n\n- Igor T. Ghisi (`@itghisi <https://github.com/itghisi>`_);\n- John David Reaver (`@jdreaver <https://github.com/jdreaver>`_);\n- Benjamin Hedrich (`@bh <https://github.com/bh>`_);\n- Benjamin Audren (`@baudren <https://github.com/baudren>`_);\n- Fabio Zadrozny (`@fabioz <https://github.com/fabioz>`_);\n- Datalyze Solutions (`@datalyze-solutions <https://github.com/datalyze-solutions>`_);\n- Florian Bruhin (`@The-Compiler <https://github.com/The-Compiler>`_);\n- Guilherme Quentel Melo (`@gqmelo <https://github.com/gqmelo>`_);\n- Francesco Montesano (`@montefra <https://github.com/montefra>`_);\n- Roman Yurchak (`@rth <https://github.com/rth>`_)\n\n**Powered by**\n\n.. |pycharm| image:: https://www.jetbrains.com/pycharm/docs/logo_pycharm.png\n  :target: https://www.jetbrains.com/pycharm\n\n.. |pydev| image:: http://www.pydev.org/images/pydev_banner3.png\n  :target: https://www.pydev.org\n\n|pycharm|\n\n|pydev|\n\n.. _tox: https://tox.readthedocs.io\n\n\n",
  "requires_dist": [
    "pytest (>=3.0.0)",
    "pre-commit ; extra == 'dev'",
    "tox ; extra == 'dev'",
    "sphinx ; extra == 'doc'",
    "sphinx-rtd-theme ; extra == 'doc'"
  ],
  "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
  "current_version": "3.3.0",
  "released_versions": [
    "0.3",
    "1.0",
    "1.0.1",
    "1.0.2",
    "1.1",
    "1.1.1",
    "1.10.0",
    "1.11.0",
    "1.2.0",
    "1.2.0-rc.1",
    "1.2.1",
    "1.2.2",
    "1.2.3",
    "1.3.0",
    "1.4.0",
    "1.5.0",
    "1.5.1",
    "1.6.0",
    "1.7.0",
    "1.8.0",
    "1.9.0",
    "2.0.0",
    "2.1.0",
    "2.1.1",
    "2.1.2",
    "2.2.0",
    "2.2.1",
    "2.3.0",
    "2.3.1",
    "2.3.2",
    "2.4.0",
    "2.4.1",
    "3.0.0",
    "3.0.1",
    "3.0.2",
    "3.1.0",
    "3.2.0",
    "3.2.1",
    "3.2.2",
    "3.3.0"
  ]
}